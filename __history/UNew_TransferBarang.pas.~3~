unit UNew_TransferBarang;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, DBGridEhGrouping, ToolCtrlsEh,
  DBGridEhToolCtrls, DynVarsEh, RzButton, Vcl.ExtCtrls, EhLibVCL, GridsEh,
  DBAxisGridsEh, DBGridEh, Vcl.StdCtrls, RzCmboBx, RzEdit, Vcl.Mask,
  MemTableDataEh, Data.DB, MemTableEh;

type
  TFNew_TransferBarang = class(TForm)
    DBGriddetail: TDBGridEh;
    Panel2: TPanel;
    BBatal: TRzBitBtn;
    BSimpan: TRzBitBtn;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Label9: TLabel;
    Label10: TLabel;
    Edno: TRzEdit;
    DtTransfer: TRzDateTimeEdit;
    EdKet: TMemo;
    CbDari: TRzComboBox;
    CbKe: TRzComboBox;
    Memdetail: TMemTableEh;
    DsDetail: TDataSource;
    Label11: TLabel;
    Label12: TLabel;
    CbKategori: TRzComboBox;
    Label13: TLabel;
    Label14: TLabel;
    RzComboBox1: TRzComboBox;
    procedure BSimpanClick(Sender: TObject);
    procedure BBatalClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure DBGridEh1Columns0EditButtons0Click(Sender: TObject;
      var Handled: Boolean);
    procedure CbKategoriSelect(Sender: TObject);
    procedure CbKeSelect(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    Procedure Simpan;
    Procedure Edit;
    Procedure Load;
    Procedure Autonumber;
    Procedure Clear;
  end;

//var
Function  FNew_TransferBarang: TFNew_TransferBarang;
var
  status:integer;
  th,kd_gdng,bln,tglno,nourut:string;

implementation

{$R *.dfm}

uses UTransfer_Barang, UItemTransferAntar_Gdng, UMainmenu, UDataModule;
var
  realfnew_transfergdng : TFNew_Transfer_Antar_Gudang;
// implementasi function
function FNew_TransferBarang: TFNew_TransferBarang;
begin
  if realfnew_transfergdng <> nil then
    FNew_Transfer_Antar_Gudang:= realfnew_transfergdng
  else
    Application.CreateForm(TFNew_TransferBarang, Result);
end;

function IntToRoman(Value : Longint):String;  // fungsi
    const
    arabics: Array[1..12] of integer=(1,2,3,4,5,6,7,8,9,10,11,12);
    Romans: Array [1..12] Of string=('I','II','III','IV','V','VI','VII','VIII','IX','X','XI','XII');
    Var  i :integer;
    begin
    For i := 12 downto 1 do
    while (Value >= Arabics[i]) do
    begin
      Value := Value - Arabics[i];
      Result:= Result + Romans[i];
    end;
end;

Procedure TFNew_TransferBarang.Autonumber;
  var i      : integer;
    urut   : integer;
    yr,mt,dy,noSJ,noEX ,yn : string;
    yy,d,M : word;
    code   : string;
    //urutan   : string;
    EditComplete : string;
    maxmy  : string;
    kd_mat :string;
begin
(*Find encode of the date*)
 DecodeDate(DtTransfer.Date, yy,M,d );
 th:=FormatDateTime('yyy',DtTransfer.Date);
 bln:=FormatDateTime('mm',DtTransfer.Date);
 tglno:=FormatDateTime('dd',DtTransfer.Date);
 yr:=intTostr(yy);
 yn:=copy(yr,3,2);
 mt:=IntToStr(M);
 dy:=IntToStr(d);
 (*looking for max mm/yy*)
 maxmy:= (tglno+'/'+IntToRoman(strToint(mt)))+'/'+yn;
 with FNew_Transfer_Antar_Gudang do
 begin
with dm.Qtemp do
  begin
    close;
    sql.Clear;
    sql.Text:='select max(nourut)as urut from t_transfer_antar_gudang where tahun='+QuotedStr(th)+' and bln='+QuotedStr(bln)+' and tgl_no='+QuotedStr(tglno);
    open;
  end;
   if dm.Qtemp['urut']= '' then
      code := '1'
   else
      code:= IntToStr(dm.Qtemp['urut'] + 1);
   if length(code) < 10 then
    begin
     for i := length(code) to 2 do
      code := '0' + code;
    end;
  EditComplete:=CODE;
  nourut:=code;
  Edno.Text:='TR/'+EditComplete+ '/'+maxmy + '/'+ Kd_sbu;;
 end;
 //th:=yr;
end;

procedure TFNew_TransferBarang.CbKategoriSelect(Sender: TObject);
begin
  Load;
end;

procedure TFNew_TransferBarang.CbKeSelect(Sender: TObject);
begin
with dm.Qtemp do
begin
  close;
  sql.Clear;
  sql.Text:='select kd_gudang from t_gudang where nm_gudang='+QuotedStr(CbKe.Text);
  Execute;
end;
   kd_gdng:=dm.Qtemp['kd_gudang'];
end;

Procedure TFNew_TransferBarang.Clear;
begin
   Edno.Clear;
   EdKet.Clear;
   CbDari.Text:='';
   CbKe.Text:='';
   DtTransfer.Date:=now;
   Memdetail.EmptyTable;
end;

Procedure TFNew_TransferBarang.Load;
begin
  CbDari.Clear;
  CbKe.Clear;
  with dm.Qtemp do
  begin
    Close;
    sql.Clear;
    sql.Text:='select * from t_gudang where (category='+QuotedStr(CbKategori.Text)+''+
              ' or category=''LAIN-LAIN'') AND (KD_SBU='+QuotedStr(loksbu)+' OR kd_sbu='''') ORDER BY nm_gudang ASC';
    ExecSQL;
  end;
  Dm.Qtemp.First;
  while not Dm.Qtemp.Eof do
  begin
    CbDari.Items.Add(Dm.Qtemp['nm_gudang']);
    Dm.Qtemp.Next;
  end;
  Dm.Qtemp.First;
  while not Dm.Qtemp.Eof do
  begin
    CbKe.Items.Add(Dm.Qtemp['nm_gudang']);
    Dm.Qtemp.Next;
  end;
end;

Procedure TFNew_TransferBarang.Simpan;
begin
Autonumber;
if messageDlg ('Anda Yakin Simpan No. '+EdNo.Text+' '+ '?', mtInformation,  [mbYes]+[mbNo],0) = mrYes
then begin
with dm.Qtemp do
begin
  Close;
  sql.Clear;
  sql.Text:='Insert into t_transfer_antar_gudang(kategori,tgl_transfer,no_transfer,"Dari","Ke",ket,tahun,kd_sbu,pic,tgl_update,bln,tgl_no,nourut)'+
            ' values(:parkt,:partgl_transfer,:parno_transfer,:parDari,:parKe,:parket,:partahun,:parkd_sbu,:parpic,:partgl_update,:parbln,:partglno,:parnourut)';
            ParamByName('partgl_transfer').Value:=FormatDateTime('yyy-mm-dd',DtTransfer.Date);
            ParamByName('parno_transfer').Value:=Edno.Text;
            ParamByName('pardari').Value:=CbDari.Text;
            ParamByName('parke').Value:=CbKe.Text;
            ParamByName('parket').Value:=EdKet.Text;
            ParamByName('partahun').Value:=th;
            ParamByName('parkt').Value:=CbKategori.Text;
            ParamByName('parkd_sbu').Value:=loksbu;
            ParamByName('parpic').Value:=Nm;
            ParamByName('partgl_update').Value:=now();
            ParamByName('parbln').Value:=bln;
            ParamByName('partglno').Value:=tglno;
            ParamByName('parnourut').Value:=nourut;
  ExecSQL;
end;
Memdetail.First;
while not Memdetail.Eof do
begin
with dm.Qtemp do
begin
  Close;
  sql.Clear;
  sql.Text:='Insert into t_transfer_antar_gudangdet(no_transfer,kd_material_stok,kd_stok_lama,'+
	          'kd_stok_baru,qty,satuan,nourut)values(:parno_transfer,:parkd_material_stok,:parkd_stok_lama,'+
	          ':parkd_stok_baru,:parqty,:parsatuan,:parnourut)';
            ParamByName('parno_transfer').Value:=Edno.Text;
            ParamByName('parkd_material_stok').Value:=Memdetail['kd_material'];
            ParamByName('parkd_stok_lama').Value:=Memdetail['kd_stok_lama'];
            ParamByName('parkd_stok_baru').Value:=Memdetail['kd_stok_baru'];
            ParamByName('parqty').Value:=Memdetail['qty'];
            ParamByName('parsatuan').Value:=Memdetail['satuan'];
            ParamByName('parnourut').Value:=Memdetail['nourut'];
  ExecSQL;
end;
Memdetail.Next;
end;
end;
  MessageDlg('Simpan Berhasil..!!',mtInformation,[MBOK],0);
end;

procedure TFNew_TransferBarang.BBatalClick(Sender: TObject);
begin
  Close;
  FTransfer_AntarGudang.dxbarRefreshClick(sender);
end;

procedure TFNew_TransferBarang.BSimpanClick(Sender: TObject);
begin
if not dm.Koneksi.InTransaction then
dm.Koneksi.StartTransaction;
try
if status=0 then
begin
  Simpan;
  Dm.Koneksi.Commit;
end;
if status=1 then
begin
  Edit;
  Dm.Koneksi.Commit;
end;
  Except on E :Exception do
    begin
      begin
//        MessageDlg('Silahkan ulangi proses simpan..!!', MtError,[mbok],0);
        MessageDlg(E.ClassName +' : '+E.Message, MtError,[mbok],0);
        Dm.koneksi.Rollback ;
      end;
    end;
end;
BBatalClick(sender);
end;

procedure TFNew_TransferBarang.DBGridEh1Columns0EditButtons0Click(
  Sender: TObject; var Handled: Boolean);
begin
with FItemTransferAntar_Gdng do
begin
  Show;
  statustr:='tr';
with FItemTransferAntar_Gdng.Qbarang do
begin
  Close;
  sql.Clear;
  sql.Text:='select a.*,b.*,c.nm_supplier from t_material_stok_det a inner join t_material_stok b on '+
            ' a.kd_material_stok=b.kd_material_stok inner join t_supplier c on '+
            ' b.kd_supplier=c.kd_supplier where a."Outstanding" > 0 AND a.gudang='+QuotedStr(CbDari.Text);
  ExecSQL;
end;
  FItemTransferAntar_Gdng.Qbarang.Open;
end;
end;

Procedure TFNew_TransferBarang.Edit;
begin
with dm.Qtemp do
begin
  Close;
  sql.Clear;
  sql.Text:=' Update t_transfer_antar_gudang set tgl_transfer=:partgl_transfer,pic=:parpic,tgl_update=:partglup,'+
            ' "Dari"=:pardari,"Ke"=:parke,ket=:parket,kategori=:parkt,kd_sbu=:parkd_sbu where no_transfer=:parno_transfer ';
            ParamByName('partgl_transfer').Value:=FormatDateTime('yyy-mm-dd',DtTransfer.Date);
            ParamByName('parno_transfer').Value:=Edno.Text;
            ParamByName('pardari').Value:=CbDari.Text;
            ParamByName('parke').Value:=CbKe.Text;
            ParamByName('parket').Value:=EdKet.Text;
            ParamByName('parkt').Value:=CbKategori.Text;
            ParamByName('parkd_sbu').Value:=loksbu;
            ParamByName('parpic').Value:=nm;
            ParamByName('partglup').Value:=now();
  ExecSQL;
end;
with dm.Qtemp do
begin
  close;
  sql.Clear;
  sql.Text:='Delete From t_transfer_antar_gudangdet where no_transfer='+QuotedStr(Edno.Text);
  ExecSQL;
end;
Memdetail.First;
while not Memdetail.Eof do
begin
with dm.Qtemp do
begin
  Close;
  sql.Clear;
  sql.Text:='Insert into t_transfer_antar_gudangdet(no_transfer,kd_material_stok,kd_stok_lama,'+
	          'kd_stok_baru,qty,satuan)values(:parno_transfer,:parkd_material_stok,:parkd_stok_lama,'+
	          ':parkd_stok_baru,:parqty,:parsatuan)';
            ParamByName('parno_transfer').Value:=Edno.Text;
            ParamByName('parkd_material_stok').Value:=Memdetail['kd_material'];
            ParamByName('parkd_stok_lama').Value:=Memdetail['kd_stok_lama'];
            ParamByName('parkd_stok_baru').Value:=Memdetail['kd_stok_baru'];
            ParamByName('parqty').Value:=Memdetail['qty'];
            ParamByName('parsatuan').Value:=Memdetail['satuan'];
           // ParamByName('parkd_sbu').Value:=loksbu;
  ExecSQL;
end;
Memdetail.Next;
end;
  MessageDlg('Simpan Berhasil..!!',mtInformation,[MBOK],0);
end;

procedure TFNew_TransferBarang.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  Action:=cafree;
end;

procedure TFNew_TransferBarang.FormCreate(Sender: TObject);
begin
realfnew_transfergdng:=self;
end;

procedure TFNew_TransferBarang.FormDestroy(Sender: TObject);
begin
  realfnew_transfergdng:=nil;
end;

procedure TFNew_TransferBarang.FormShow(Sender: TObject);
begin
//  Self.Load;
  CbKategori.Clear;
  with dm.Qtemp do
  begin
    Close;
    sql.Clear;
    sql.Text:='select * from t_kategori_gudang';
    ExecSQL;
  end;
  Dm.Qtemp.First;
  while not Dm.Qtemp.Eof do
  begin
    CbKategori.Items.Add(Dm.Qtemp['kategori']);
    Dm.Qtemp.Next;
  end;
end;

end.
