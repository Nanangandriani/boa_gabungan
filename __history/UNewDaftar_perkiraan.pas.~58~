unit UNewDaftar_perkiraan;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, RzButton, Vcl.ExtCtrls, Vcl.StdCtrls,
  RzCmboBx, Data.DB, MemDS, DBAccess, Uni, DBGridEhGrouping, ToolCtrlsEh,
  DBGridEhToolCtrls, DynVarsEh, MemTableDataEh, MemTableEh, EhLibVCL, GridsEh,
  DBAxisGridsEh, DBGridEh, RzPanel, Vcl.Buttons;

type
  TFNewdaftar_perkiraan_bank = class(TForm)
    Panel2: TPanel;
    BBatal: TRzBitBtn;
    BSave: TRzBitBtn;
    RzPanel1: TRzPanel;
    Label16: TLabel;
    Label5: TLabel;
    Label7: TLabel;
    edkode: TEdit;
    ednama_perkiraan: TEdit;
    CBheader: TRzComboBox;
    RzBitBtn1: TRzBitBtn;
    CBposting: TRzComboBox;
    RzBitBtn3: TRzBitBtn;
    Qtemp: TUniQuery;
    RzPanel2: TRzPanel;
    RzBitBtn4: TRzBitBtn;
    DataSource1: TDataSource;
    Memdetail: TMemTableEh;
    DBGridnewspmuat: TDBGridEh;
    DBGridbrowse: TDBGridEh;
    Label1: TLabel;
    CBposisi_d_k: TRzComboBox;
    Label3: TLabel;
    CBkelompok_akun: TRzComboBox;
    Label9: TLabel;
    CBjenis_akun: TRzComboBox;
    Label11: TLabel;
    CBkategori: TRzComboBox;
    Qtemp2: TUniQuery;
    Qtemp3: TUniQuery;
    Label13: TLabel;
    Label18: TLabel;
    Label19: TLabel;
    CkNeraca: TCheckBox;
    SpeedButton1: TSpeedButton;
    EdKategori: TSpeedButton;
    Label2: TLabel;
    Label4: TLabel;
    Cb_PosNR: TRzComboBox;
    Cb_Neraca: TRzComboBox;
    Label6: TLabel;
    Label8: TLabel;
    Cb_lr: TRzComboBox;
    Cb_by: TRzComboBox;
    SpeedButton3: TSpeedButton;
    SpeedButton4: TSpeedButton;
    BtnNeraca: TRzBitBtn;
    RzBitBtn5: TRzBitBtn;
    procedure BBatalClick(Sender: TObject);
    procedure BSaveClick(Sender: TObject);
    procedure edkodeKeyPress(Sender: TObject; var Key: Char);
    procedure cbmodulKeyPress(Sender: TObject; var Key: Char);
    procedure RzBitBtn1Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure RzBitBtn2Click(Sender: TObject);
    procedure RzBitBtn3Click(Sender: TObject);
    procedure CBjenis_akunChange(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure CkNeracaClick(Sender: TObject);
    procedure CBkelompok_akunChange(Sender: TObject);
    procedure SpeedButton1Click(Sender: TObject);
    procedure EdKategoriClick(Sender: TObject);
    procedure Cb_bySelect(Sender: TObject);
    procedure Cb_lrSelect(Sender: TObject);
    procedure Cb_NeracaSelect(Sender: TObject);
    procedure Cb_PosNRSelect(Sender: TObject);
    procedure SpeedButton3Click(Sender: TObject);
    procedure SpeedButton4Click(Sender: TObject);
    procedure BtnNeracaClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    statusnl,Kelompok,id_by,id_lr,id_nr,id_posnr:string;
    procedure Clear;
    procedure Save;
    procedure Update;
  end;

function FNewdaftar_perkiraan_bank: TFNewdaftar_perkiraan_bank;
var  Status :integer;

implementation

{$R *.dfm}

uses Udaftar_perkiraan, UNew_HeaderPerkiraan, UNew_Posting,
  UCari_Modul, UDataModule, UNew_JenisAkun, UNew_KategoriAkun;
var
//  FPakai_BahanPersbu: TFPakai_BahanPersbu;
  RealFNew_PerkBank: TFNewdaftar_perkiraan_bank;

function FNewdaftar_perkiraan_bank: TFNewdaftar_perkiraan_bank;
begin
  if RealFNew_PerkBank <> nil then
    FNewdaftar_perkiraan_bank:= RealFNew_PerkBank
  else
    Application.CreateForm(TFNewdaftar_perkiraan_bank, Result);
end;

procedure TFNewdaftar_perkiraan_bank.BBatalClick(Sender: TObject);
begin
  Clear;
  Close;
end;

procedure TFNewdaftar_perkiraan_bank.BSaveClick(Sender: TObject);
begin
  if not dm.Koneksi.InTransaction then
  dm.Koneksi.StartTransaction;
  try
    if edkode.Text='' then
    begin
      MessageDlg('Kode Wajib Diisi..!!',mtInformation,[mbRetry],0);
      edkode.SetFocus;
      Exit;
    end;
    if ednama_perkiraan.Text='' then
    begin
      MessageDlg('Nama Perkiraan Wajib Diisi..!!',mtInformation,[mbRetry],0);
      ednama_perkiraan.SetFocus;
      Exit;
    end;
    if CBposting.Text='' then
    begin
      MessageDlg('Posting Wajib Diisi..!!',mtInformation,[mbRetry],0);
      CBposting.SetFocus;
      Exit;
    end;
    if CBposisi_d_k.Text='' then
    begin
      MessageDlg('posisi d/k Wajib Diisi..!!',mtInformation,[mbRetry],0);
      CBposisi_d_k.SetFocus;
      Exit;
    end;
    if CBkelompok_akun.Text='' then
    begin
      MessageDlg('Kelompok Wajib Diisi..!!',mtInformation,[mbRetry],0);
      CBkelompok_akun.SetFocus;
      Exit;
    end
    else if CBjenis_akun.Text='' then
    begin
      MessageDlg('jenis Wajib Diisi..!!',mtInformation,[mbRetry],0);
      CBjenis_akun.SetFocus;
      Exit;
    end;
    if Status = 0 then
    begin
      Save;
      Dm.Koneksi.Commit;
    end;
    if Status = 1 then
    begin
      Update;
      Dm.Koneksi.Commit;
    end;
  Except on E :Exception do
    begin
      begin
        MessageDlg(E.ClassName +' : '+E.Message, MtError,[mbok],0);
        Dm.koneksi.Rollback ;
      end;
    end;
  end;
end;

procedure TFNewdaftar_perkiraan_bank.BtnNeracaClick(Sender: TObject);
begin
  with FNew_KategoriAkun do
    begin
      Show;
      caption:='Form New group Laba / Rugi';
      jenistr:='Neraca';
      Pnl_Neraca.show;
      Pnl_Kategori.Hide;
    end;
end;

procedure TFNewdaftar_perkiraan_bank.CBjenis_akunChange(Sender: TObject);
begin
  CBkategori.Clear;
  with Qtemp2 do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select a.category from t_ak_category a '+
              'left join t_ak_type b on a.type_id=b.id '+
              'where b."type"='+QuotedStr(CBjenis_akun.Text);
    Open;
  end;
  while not Qtemp2.Eof do
  begin
    CBkategori.Items.Add(Qtemp2.FieldByName('category').AsString);
    Qtemp2.Next;
  end;
end;

procedure TFNewdaftar_perkiraan_bank.CBkelompok_akunChange(Sender: TObject);
begin
 if CBkelompok_akun.Text='NERACA' then Kelompok:='1' else Kelompok:='2';
end;

procedure TFNewdaftar_perkiraan_bank.cbmodulKeyPress(Sender: TObject;
  var Key: Char);
begin
  if key = chr(13) then
  begin
    BSaveClick(sender);
  end;
end;

procedure TFNewdaftar_perkiraan_bank.Cb_bySelect(Sender: TObject);
begin
  with Qtemp do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select "id",cost_type from t_ak_type_cost where cost_type='+QuotedStr(CB_by.Text);
    Open;
  end;
  if qtemp.RecordCount=0 then
  begin
    id_by:='0';
  end else
    id_by:=Qtemp['id'];
end;

procedure TFNewdaftar_perkiraan_bank.Cb_lrSelect(Sender: TObject);
begin
  with Qtemp do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select "id",lr2 from t_ak_type_lr where lr2='+QuotedStr(CB_lr.Text);
    Open;
  end;
  if qtemp.RecordCount=0 then
  begin
    id_lr:='0';
  end else
    id_lr:=Qtemp['id'];
end;

procedure TFNewdaftar_perkiraan_bank.Cb_NeracaSelect(Sender: TObject);
begin
  with Qtemp do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select "id",type_balance from t_ak_type_balance where type_balance='+QuotedStr(CB_neraca.Text);
    Open;
  end;
  if qtemp.RecordCount=0 then
  begin
    id_nr:='0';
  end else
    id_nr:=Qtemp['id'];
end;

procedure TFNewdaftar_perkiraan_bank.Cb_PosNRSelect(Sender: TObject);
begin
  with Qtemp do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select "id",post_name from t_ak_type_balance_post where post_name='+QuotedStr(CB_posnr.Text);
    Open;
  end;
  if qtemp.RecordCount=0 then
  begin
    id_posnr:='0';
  end else
    id_posnr:=Qtemp['id'];
end;

procedure TFNewdaftar_perkiraan_bank.CkNeracaClick(Sender: TObject);
begin
  if CkNeraca.Checked=true then statusnl:='1' else statusnl:='0';
end;

procedure TFNewdaftar_perkiraan_bank.Clear;
begin
  edkode.Text:='';
  ednama_perkiraan.Text:='';
  CBjenis_akun.Clear;
  CBkategori.Clear;
  Memdetail.EmptyTable;
  id_by:='0';
  id_lr:='0';
  id_nr:='0';
  id_posnr:='0';
end;

procedure TFNewdaftar_perkiraan_bank.edkodeKeyPress(Sender: TObject;
  var Key: Char);
begin
  if key = chr(13) then
  begin
   ednama_perkiraan.SetFocus;
  end;
end;

procedure TFNewdaftar_perkiraan_bank.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  Action:=cafree;
end;

procedure TFNewdaftar_perkiraan_bank.FormCreate(Sender: TObject);
begin
  RealFNew_PerkBank:=Self;
end;

procedure TFNewdaftar_perkiraan_bank.FormDestroy(Sender: TObject);
begin
  RealFNew_PerkBank:=nil;
end;

procedure TFNewdaftar_perkiraan_bank.FormShow(Sender: TObject);
begin
  statusnl:='0';
  with dm.Qtemp do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select header_name from t_ak_header ';
    Open;
  end;
  while not DM.Qtemp.Eof do
  begin
    CBheader.Items.Add(DM.Qtemp.FieldByName('header_name').AsString);
    DM.Qtemp.Next;
  end;

  with dm.Qtemp3 do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select posting from t_ak_posting_type';
    Open;
  end;
  while not DM.Qtemp3.Eof do
  begin
    CBposting.Items.Add(DM.Qtemp3.FieldByName('posting').AsString);
    DM.Qtemp3.Next;
  end;

  with dm.Qtemp2 do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select "type" from t_ak_type';
    Open;
  end;
  while not DM.Qtemp2.Eof do
  begin
    CBjenis_akun.Items.Add(DM.Qtemp2.FieldByName('type').AsString);
    DM.Qtemp2.Next;
  end;
 { with dm.Qtemp do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select * from t_kategori_akun ';
    Open;
  end;
  while not DM.Qtemp.Eof do
  begin
    CBkategori.Items.Add(DM.Qtemp.FieldByName('nm_kategori').AsString);
    DM.Qtemp.Next;
  end;   }
  Cb_Neraca.Clear;
  with dm.Qtemp2 do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select type_balance from t_ak_type_balance where type_balance <> '''' ';
    Open;
  end;
  while not DM.Qtemp2.Eof do
  begin
    Cb_Neraca.Items.Add(DM.Qtemp2.FieldByName('type_balance').AsString);
    DM.Qtemp2.Next;
  end;
  Cb_by.Clear;
  with dm.Qtemp2 do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select cost_type from t_ak_type_cost where cost_type <> '''' ';
    Open;
  end;
  while not DM.Qtemp2.Eof do
  begin
    Cb_by.Items.Add(DM.Qtemp2.FieldByName('cost_type').AsString);
    DM.Qtemp2.Next;
  end;
  Cb_PosNR.Clear;
  with dm.Qtemp2 do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select post_name from t_ak_type_balance_post where post_name <> '''' ';
    Open;
  end;
  while not DM.Qtemp2.Eof do
  begin
    Cb_PosNR.Items.Add(DM.Qtemp2.FieldByName('post_name').AsString);
    DM.Qtemp2.Next;
  end;
  Cb_lr.Clear;
  with dm.Qtemp2 do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select lr2 from t_ak_type_lr where lr2 <> '''' ';
    Open;
  end;
  while not DM.Qtemp2.Eof do
  begin
    Cb_lr.Items.Add(DM.Qtemp2.FieldByName('lr2').AsString);
    DM.Qtemp2.Next;
  end;
end;

procedure TFNewdaftar_perkiraan_bank.RzBitBtn1Click(Sender: TObject);
begin
  FNewHeaderPerkiraan.edkode_header.Text:='';
  FNewHeaderPerkiraan.ednama_header.Text:='';
  FNewHeaderPerkiraan.Show;
end;

procedure TFNewdaftar_perkiraan_bank.RzBitBtn2Click(Sender: TObject);
begin
  FCari_Data_Modul.Show;
end;

procedure TFNewdaftar_perkiraan_bank.RzBitBtn3Click(Sender: TObject);
begin
  with FNewPosting do
  begin
    jenis:='posting';
    ednama_posting.Text:='';
    Pnlposting.visible:=true;
    Pnlcost.visible:=false;
    Show;
  end;
end;

procedure TFNewdaftar_perkiraan_bank.Save;
begin
  with dm.QTemp1 do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select header_code from t_ak_header where header_name='+QuotedStr(CBheader.Text);
    Open;
  end;
  with QTemp do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select id from t_ak_posting_type where posting='+QuotedStr(cbposting.Text);
    Open;
  end;
  with QTemp2 do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select id from t_ak_type where "type"='+QuotedStr(CBjenis_akun.Text);
    Open;
  end;
  with QTemp3 do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select category_code from t_ak_category where category='+QuotedStr(CBkategori.Text);
    Open;
  end;

  Memdetail.First;
  while not Memdetail.Eof do
  begin
    with dm.Qtemp do
    begin
      close;
      sql.Clear;
      sql.Text:='Insert Into t_ak_account_det(account_code,module_id) '+
                'Values (:parkode_perkiraan,:parid_modul)';
      parambyname('parkode_perkiraan').Value:=edkode.Text;
      parambyname('parid_modul').Value:=Memdetail['id'];
      execsql;
    end;
    Memdetail.Next;
  end;
  with dm.Qtemp do
  begin
    close;
    sql.Clear;
    sql.Text:='Insert Into t_ak_account(code,header_code,account_name,posting_id,posisi_dk,group_id,'+
    'type_id,category_code,balance_status,cost_st_id,lr_st_id,balance_st_id,balance_post_st_id) '+
    'Values (:parkode,:parkode_header,:parnama_perkiraan,:parposting,:parposisi_dk,:parkelompok_akun,'+
    ':parid_jenis_akun,:parkd_kategori_akun,:status_neraca,:cost_id,:lr_id,:balance_id,:balance_post_id)';
    parambyname('parkode').Value:=edkode.Text;
    parambyname('parkode_header').Value:=dm.QTemp1.FieldByName('header_code').AsString;
    parambyname('parnama_perkiraan').Value:=ednama_perkiraan.Text;
    parambyname('parposting').Value:=QTemp.FieldByName('id').AsString;
    ParamByName('status_neraca').Value:=statusnl;
    if CBposisi_d_k.Text='DEBIT' then
    begin
     parambyname('parposisi_dk').Value:='D';
    end
    else
    begin
      parambyname('parposisi_dk').Value:='K';
    end;

    if CBkelompok_akun.Text='NERACA' then
    begin
      parambyname('parkelompok_akun').Value:=1;
    end
    else
    begin
      parambyname('parkelompok_akun').Value:=2;
    end;
    parambyname('parid_jenis_akun').Value:=QTemp2.FieldByName('id').AsString;
    parambyname('parkd_kategori_akun').Value:=QTemp3.FieldByName('category_code').AsString;
    parambyname('cost_id').Value:=id_by;
    parambyname('lr_id').Value:=id_lr;
    parambyname('balance_id').Value:=id_nr;
    parambyname('balance_post_id').Value:=id_posnr;
    execsql;
  end;
  MessageDlg('Simpan Berhasil..!!',mtInformation,[MBOK],0);
  Clear;
  Close;
  Fdaftar_perkiraan.Refresh;
end;

procedure TFNewdaftar_perkiraan_bank.SpeedButton1Click(Sender: TObject);
begin
  with FNew_JenisAkun do
  begin
    Show;
  end;
end;

procedure TFNewdaftar_perkiraan_bank.EdKategoriClick(Sender: TObject);
begin
  with FNew_KategoriAkun do
    begin
      Show;
      caption:='Form New Kategori Akun';
      jenistr:='Kategori';
      Pnl_Kategori.Show;
      Pnl_Neraca.Hide;
    end;
end;

procedure TFNewdaftar_perkiraan_bank.SpeedButton3Click(Sender: TObject);
begin
  with FNewPosting do
  begin
    jenis:='by';
    ednama_posting.Text:='';
    Pnlposting.visible:=false;
    Pnlcost.visible:=true;
    Edby.Text:='';
    Show;
  end;
end;

procedure TFNewdaftar_perkiraan_bank.SpeedButton4Click(Sender: TObject);
begin
  with FNew_KategoriAkun do
    begin
      Show;
      caption:='Form New group Laba / Rugi';
      jenistr:='lr';
      Pnl_lr
    end;
end;

procedure TFNewdaftar_perkiraan_bank.Update;
begin
  with dm.QTemp1 do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select header_code from t_ak_header where header_name='+QuotedStr(CBheader.Text);
    Open;
  end;
  with QTemp do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select id from t_ak_posting_type where posting='+QuotedStr(cbposting.Text);
    Open;
  end;
  with QTemp2 do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select id from t_ak_type where "type"='+QuotedStr(CBjenis_akun.Text);
    Open;
  end;
  with dm.QTemp3 do
  begin
    Close;
    Sql.Clear;
    Sql.Text:='select category_code from t_ak_category where category='+QuotedStr(CBkategori.Text);
    Open;
  end;

  with Dm.Qtemp do
  begin
    close;
    sql.Clear;
    Sql.Text:='Delete From t_ak_account_det '+
              'where account_code='+QuotedStr(edkode.Text);
    Execsql;
  end;

  Memdetail.First;
  while not Memdetail.Eof do
  begin
    with dm.Qtemp do
    begin
      close;
      sql.Clear;
      sql.Text:='Insert Into t_ak_account_det(account_code,module_id) '+
                'Values (:parkode_perkiraan,:parid_modul)';
      parambyname('parkode_perkiraan').Value:=edkode.Text;
      parambyname('parid_modul').Value:=Memdetail['id'];
      execsql;
    end;
    Memdetail.Next;
  end;

  with Dm.Qtemp do
  begin
    close;
    Sql.Clear;
    Sql.Text :='update t_ak_account set header_code=:parkode_header,account_name=:parnama_perkiraan,'+
    'posting_id=:parposting,posisi_dk=:parposisi_dk,group_id=:parkelompok_akun,type_id=:parid_jenis_akun,'+
    'category_code=:parkd_kategori_akun,balance_status=:parstatus_neraca,cost_st_id=:cost_id,'+
    'lr_st_id=:lr_id,balance_st_id=:balance_id,balance_post_st_id=:balance_post_id where code=:parkode';
    parambyname('parkode').Value:=edkode.Text;
    parambyname('parkode_header').Value:=dm.QTemp1.FieldByName('header_code').AsString;
    parambyname('parnama_perkiraan').Value:=ednama_perkiraan.Text;
    parambyname('parposting').Value:=QTemp.FieldByName('id').AsString;
    ParamByName('parstatus_neraca').Value:=statusnl;
    if CBposisi_d_k.Text='DEBIT' then
    begin
     parambyname('parposisi_dk').Value:='D';
    end
    else
    begin
      parambyname('parposisi_dk').Value:='K';
    end;

    if CBkelompok_akun.Text='NERACA' then
    begin
      parambyname('parkelompok_akun').Value:='1';
    end
    else
    begin
      parambyname('parkelompok_akun').Value:='2';
    end;
    parambyname('parid_jenis_akun').Value:=QTemp2.FieldByName('id').AsString;
    parambyname('parkd_kategori_akun').Value:=dm.QTemp3.FieldByName('category_code').AsString;
    parambyname('cost_id').Value:=id_by;
    parambyname('lr_id').Value:=id_lr;
    parambyname('balance_id').Value:=id_nr;
    parambyname('balance_post_id').Value:=id_posnr;
    ExecSql;
  end;
  MessageDlg('Ubah Berhasil..!!',mtInformation,[MBOK],0);
  Clear;
  Close;
  Fdaftar_perkiraan.Refresh;
end;

end.
