unit UNew_Supplier;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, RzButton, Vcl.ExtCtrls, RzPanel,
  Vcl.StdCtrls;

type
  TFInput_Supplier = class(TForm)
    Edno: TEdit;
    EdNm: TEdit;
    EdAlamat: TEdit;
    EdTelp: TEdit;
    EdNPWP: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Label9: TLabel;
    Label10: TLabel;
    Panel2: TPanel;
    BBatal: TRzBitBtn;
    BSimpan: TRzBitBtn;
    BEdit: TRzBitBtn;
    procedure BBatalClick(Sender: TObject);
    procedure BEditClick(Sender: TObject);
    procedure BSimpanClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    Procedure Clear;

  end;

var
  FInput_Supplier: TFInput_Supplier;

//Function  FInput_Supplier: TFInput_Supplier;

implementation

{$R *.dfm}

uses UDataModule, UListSupplier, UMainMenu;
{var
    RealFInput_Supplier: TFInput_Supplier;

Function FInput_Supplier: TFInput_Supplier;
begin
    if RealFInput_Supplier <> nil then
    FInput_Supplier:= RealFInput_Supplier
    else
    Application.CreateForm(TFInput_Supplier, Result);
end;}

procedure TFInput_Supplier.Clear;
begin
   Edno.Text:='';
   EdNm.Text:='';
   EdAlamat.Text:='';
   Edtelp.Text:='';
   EdNPWP.Text:='';
end;

procedure TFInput_Supplier.BBatalClick(Sender: TObject);
begin
  self.Refresh;
  Close;
  FlistSupplier.OnShow(sender);

end;

procedure TFInput_Supplier.BEditClick(Sender: TObject);
begin
    BEdit.Visible:=false;
    BSimpan.Visible:=true;
    if Edno.Text='' then
    begin
      MessageDlg('Kode Supplier Tidak boleh Kosong ',MtWarning,[MbOk],0);
      EdNo.SetFocus;
      Exit;
    end;
    if EdNm.Text='' then
    begin
      MessageDlg('Nama Supplier Tidak boleh Kosong ',MtWarning,[MbOk],0);
      EdNm.SetFocus;
      Exit;
    end;
    if EdAlamat.Text='' then
    begin
      MessageDlg('Alamat Supplier Tidak boleh Kosong ',MtWarning,[MbOk],0);
      EdAlamat.SetFocus;
      Exit;
    end;
    if Edtelp.Text='' then
    begin
      MessageDlg('Telepon Supplier Tidak boleh Kosong ',MtWarning,[MbOk],0);
      Edtelp.SetFocus;
      Exit;
    end;
    if not dm.koneksi.InTransaction then
    dm.koneksi.StartTransaction;
    try
    begin
      with dm.Qtemp do
      begin
        close;
        sql.clear;
        sql.Text:='Select * from master_data.t_supplier';
        ExecSQL;
      end;
      with dm.Qtemp do
      begin
        close;
        sql.clear;
        sql.Text:='Update master_data.t_supplier set supplier_name='+QuotedStr(Ednm.Text)+ ' , Address='+QuotedStr(EdAlamat.Text)+' ,telp='+QuotedStr(Edtelp.Text)+''+
                  ' ,npwp='+QuotedStr(EdNPWP.Text)+''+
                  ' Where supplier_code='+QuotedStr(Edno.Text);
        ExecSQL;
      end;
      dm.koneksi.Commit;
      Messagedlg('Data Berhasil di Simpan',MtInformation,[Mbok],0);
      end
      Except
      on E :Exception do
      begin
        MessageDlg(E.Message,mtError,[MBok],0);
        dm.koneksi.Rollback;
      end;
    end;
    FMainMenu.ShowInForm;
    BBatalClick(sender);;
end;

procedure TFInput_Supplier.BSimpanClick(Sender: TObject);
begin
    if Edno.Text='' then
    begin
      MessageDlg('Kode Supplier Tidak boleh Kosong ',MtWarning,[MbOk],0);
      EdNo.SetFocus;
      Exit;
    end;
    if EdNm.Text='' then
    begin
      MessageDlg('Nama Supplier Tidak boleh Kosong ',MtWarning,[MbOk],0);
      EdNm.SetFocus;
      Exit;
    end;
    if EdAlamat.Text='' then
    begin
      MessageDlg('Alamat Supplier Tidak boleh Kosong ',MtWarning,[MbOk],0);
      EdAlamat.SetFocus;
      Exit;
    end;
    if Edtelp.Text='' then
    begin
      MessageDlg('Telepon Supplier Tidak boleh Kosong ',MtWarning,[MbOk],0);
      Edtelp.SetFocus;
      Exit;
    end;
    if not dm.koneksi.InTransaction then
    dm.koneksi.StartTransaction;
    try
    begin
      with dm.Qtemp do
      begin
        close;
        sql.clear;
        sql.Text:='Select * from master_data.t_supplier';
        ExecSQL;
      end;

      with dm.Qtemp do
      begin
        close;
        sql.clear;
        sql.Text:='Insert into master_data.t_supplier(supplier_code,supplier_name,address,Telp, npwp,created_at,created_by)values'+
                  '('+QuotedStr(Edno.Text)+','+QuotedStr(EdNm.Text)+','+QuotedStr(EdAlamat.Text)+','+
                  ''+QuotedStr(EdTelp.Text)+','+QuotedStr(EdNPWP.Text)+',:created_at,:created_by )';
                  //''+QuotedStr(EdTelp.Text)+','+QuotedStr(EdNPWP.Text)+',now(),''Admin'' )';
                  //:created_at,:created_by';
                  parambyname('created_at').AsDateTime:=Now;
                  parambyname('created_by').AsString:='Admin';
        ExecSQL;
      end;
      dm.koneksi.Commit;
      Messagedlg('Data Berhasil di Simpan',MtInformation,[Mbok],0);
      end
    Except
    on E :Exception do
    begin
      MessageDlg(E.Message,mtError,[MBok],0);
      dm.koneksi.Rollback;
    end;
    end;
    FMainMenu.ShowInForm;
    //FListSupplier.dxbarRefreshClick(sender);
    BBatalClick(sender);
end;

procedure TFInput_Supplier.FormClose(Sender: TObject; var Action: TCloseAction);
begin

  //FListSupplier.Refresh;
end;

procedure TFInput_Supplier.FormCreate(Sender: TObject);
begin
    //RealFInput_Supplier:=self;
end;

procedure TFInput_Supplier.FormDestroy(Sender: TObject);
begin
   //RealFInput_Supplier:=nil;
end;

procedure TFInput_Supplier.FormShow(Sender: TObject);
begin
    Clear;
    BSimpan.Visible:=True;
    BEdit.Visible:=False;
end;

end.
