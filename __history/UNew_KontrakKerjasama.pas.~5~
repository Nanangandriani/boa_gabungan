unit UNew_KontrakKerjasama;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, DBGridEhGrouping, ToolCtrlsEh,
  DBGridEhToolCtrls, DynVarsEh, MemTableDataEh, Data.DB, MemTableEh, RzButton,
  EhLibVCL, GridsEh, DBAxisGridsEh, DBGridEh, RzEdit, Vcl.Samples.Spin,
  RzBtnEdt, Vcl.StdCtrls, RzCmboBx, Vcl.Mask, Vcl.ExtCtrls;

type
  TFNewKontrak_ks = class(TForm)
    pninput: TPanel;
    Label1: TLabel;
    qty: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label10: TLabel;
    Label12: TLabel;
    Label2: TLabel;
    Label9: TLabel;
    Label11: TLabel;
    Label13: TLabel;
    Label14: TLabel;
    Label15: TLabel;
    Label16: TLabel;
    Label8: TLabel;
    Label17: TLabel;
    Label18: TLabel;
    Label19: TLabel;
    EdNo_kontrak: TEdit;
    EdKd_supp: TEdit;
    Edtempo: TEdit;
    DtKontrak: TRzDateTimeEdit;
    DtSelesai: TRzDateTimeEdit;
    EdNo: TEdit;
    DtBln: TRzDateTimeEdit;
    DtTh: TRzDateTimeEdit;
    EdKet: TMemo;
    EdCurr: TRzComboBox;
    DtPengiriman: TRzDateTimeEdit;
    CbKategori: TComboBox;
    EdNm_supp: TRzButtonEdit;
    CbJenis: TComboBox;
    CB_kirim: TComboBox;
    EdTh_kirim: TSpinEdit;
    EdnilaiCurr: TRzNumericEdit;
    DBGridEh2: TDBGridEh;
    Panel1: TPanel;
    BBatal: TRzBitBtn;
    BSimpan: TRzBitBtn;
    BEdit: TRzBitBtn;
    MemMaterial: TMemTableEh;
    DataSource1: TDataSource;
    procedure BBatalClick(Sender: TObject);
    procedure BEditClick(Sender: TObject);
    procedure BSimpanClick(Sender: TObject);
    procedure DBGridEh2CellClick(Column: TColumnEh);
    procedure DBGridEh2ColEnter(Sender: TObject);
    procedure DBGridEh2Columns0EditButtons0Click(Sender: TObject;
      var Handled: Boolean);
    procedure DBGridEh2KeyPress(Sender: TObject; var Key: Char);
    procedure DtKontrakChange(Sender: TObject);
    procedure EdCurrSelect(Sender: TObject);
    procedure EdnilaiCurrKeyPress(Sender: TObject; var Key: Char);
    procedure EdNm_suppButtonClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    Procedure Autonumber;

  end;

var
  FNewKontrak_ks: TFNewKontrak_ks;
  Status2,status_App:String;

implementation

{$R *.dfm}

uses USearch_Supplier_SPB, UDataModule, UKontrakKerjasama;

function IntToRoman(Value : Longint):String;  // fungsi
    const
    arabics: Array[1..12] of integer=(1,2,3,4,5,6,7,8,9,10,11,12);
    Romans: Array [1..12] Of string=('I','II','III','IV','V','VI','VII','VIII','IX','X','XI','XII');
    Var  i :integer;
    begin
    For i := 12 downto 1 do
    while (Value >= Arabics[i]) do
    begin
      Value := Value - Arabics[i];
      Result:= Result + Romans[i];
    end;
end;

procedure TFNewKontrak_ks.Autonumber;
  var i      : integer;
    urut   : integer;
    yr,mt,dy,noSJ,noEX ,yn : string;
    yy,d,M : word;
    code   : string;
    //urutan   : string;
    EditComplete : string;
    maxmy  : string;
begin
  (*Find encode of the date*)
   DecodeDate(DtKontrak.Date, yy,M,d );
   yr:=intTostr(yy);
   yn:=copy(yr,3,2);
   mt:=IntToStr(M);
   dy:=IntToStr(d);
   (*looking for max mm/yy*)
   maxmy:= (IntToRoman(strToint(mt)))+'/'+yn;
    with dm.Qtemp do
    begin
      close;
      sql.Clear;
      sql.Text:='select "numeric"(max(left(no_kontrak,3)))as nourut from t_kontrak_kerjasama where tahun='+QuotedStr(DtTh.Text)+' and date_part(''MONTH'',tgl_kontrak)='+QuotedStr(DtBln.Text);
      open;
    end;
     if dm.Qtemp['nourut'] = Null then
        code := '1'
     else
        code:= IntToStr(dm.Qtemp['nourut']+ 1);
     if length(code) < 10 then
      begin
       for i := length(code) to 2 do
        code := '0' + code;
      end;
    EditComplete:=CODE;
    EdNo.Text:=EditComplete;
    EdNo_kontrak.Text:= EditComplete+ '/'+maxmy + '/'+ Kd_SBU;
  end;


procedure TFNewKontrak_ks.BBatalClick(Sender: TObject);
begin
   Close;
   FKontrakkerjasama.ActROExecute(sender);
end;

procedure TFNewKontrak_ks.BEditClick(Sender: TObject);
begin
    if EdNm_supp.Text='' then
    begin
      MessageDlg('Nama Supplier Tidak boleh Kosong ',MtWarning,[MbOk],0);
      EdNm_supp.SetFocus;
      Exit;
    end;
    if DtKontrak.Text='' then
    begin
      MessageDlg('Tanggal Mulai Kontrak Tidak boleh Kosong ',MtWarning,[MbOk],0);
      DtKontrak.SetFocus;
      Exit;
    end;
    if DtSelesai.Text='' then
    begin
      MessageDlg('Tanggal Selesai Kontrak Tidak boleh Kosong ',MtWarning,[MbOk],0);
      DtSelesai.SetFocus;
      Exit;
    end;
    if Edtempo.Text='' then
    begin
      MessageDlg('Jatuh Tempo Tidak boleh Kosong ',MtWarning,[MbOk],0);
      Edtempo.SetFocus;
      Exit;
    end;
    if DBGridEh2.Fields[6].AsString='' then
    begin
      MessageDlg('Kuantum Tidak boleh Kosong ',MtWarning,[MbOk],0);
      Exit;
    end;
    if DBGridEh2.Fields[8].AsString='' then
    begin
      MessageDlg('Harga Tidak boleh Kosong ',MtWarning,[MbOk],0);
      Exit;
    end;
    if DBGridEh2.Fields[9].AsString='' then
    begin
      MessageDlg('Total Harga Tidak boleh Kosong ',MtWarning,[MbOk],0);
      Exit;
    end;
    if not Dm.Koneksi.InTransaction then
    dm.koneksi.StartTransaction;
    try
    begin
      with dm.Qtemp2 do
      begin
        close;
        sql.clear;
        sql.Text:='Select * from t_kontrak_kerjasama';
        ExecSQL;
      end;
      with dm.Qtemp2 do
      begin
        close;
        sql.clear;
        sql.Text:='update t_kontrak_kerjasama set kd_supplier=:parkd_supplier,tgl_kontrak=:partgl_kontrak,'+
                  ' tgl_selesai=:partgl_selesai,jatuh_tempo=:parjatuh_tempo,tahun=:partahun,jenis=:parjenis, '+
                  ' no_urut=:parno_urut,Keterangan=:parketerangan,currency=:parcurrency,'+
                  ' nilaicurrency=:parnilaicurrency,bln_kirim=:parbln_kirim, kategori=:parkategori '+
                  ' , th_kirim=:parth_kirim, PIC=:parpic where no_kontrak=:parno_kontrak';
                  ParamByName('parno_kontrak').Value:=EdNo_kontrak.Text;
                  ParamByName('parkd_supplier').Value:=EdKd_supp.Text;
                  ParamByName('partgl_kontrak').Value:=FormatDateTime('yyy-mm-dd',DtKontrak.Date);
                  ParamByName('partgl_selesai').Value:=FormatDateTime('yyy-mm-dd',DtSelesai.Date);
                  ParamByName('parjatuh_tempo').Value:=Edtempo.Text;
                  ParamByName('parno_urut').Value:=EdNo.Text;
                  ParamByName('partahun').Value:=DtTh.Text;
                  ParamByName('parketerangan').Value:=EdKet.Text;
          //        ParamByName('parstatus').Value:=Status2;
                  ParamByName('parcurrency').Value:=EdCurr.Text;
                  ParamByName('parnilaicurrency').Value:=EdnilaiCurr.Text;
                  ParamByName('parjenis').Value:=CbJenis.Text;
                  ParamByName('parbln_kirim').Value:=CB_kirim.Text;
                  ParamByName('parth_kirim').Value:=EdTh_kirim.Text;
                  ParamByName('parkategori').Value:=CbKategori.Text;
                  ParamByName('parpic').Value:=Nm;
        ExecSQL;
      end;
      with dm.Qtemp do
      begin
        close;
        sql.clear;
        sql.Text:='Delete from t_kontrak_kerjasama_det where no_kontrak='+QuotedStr(EdNo_kontrak.Text);
        ExecSQL;
      end;
      MemMaterial.First;
      while not MemMaterial.Eof do
      begin
        with dm.Qtemp do
        begin
          close;
          sql.clear;
          sql.Text:='Select * from t_kontrak_kerjasama_det';
          ExecSQL;
        end;
        with dm.Qtemp do
        begin
          close;
          sql.clear;
          sql.Text:='insert into t_kontrak_kerjasama_det(no_kontrak,kd_material_stok,qty,harga,satuan,'+
                    ' total_harga, totalpo, sisaqty, status,ppn,ppn_rp,"Spesifikasi",'+
                    ' subtotal_rp,grandtotal)values(:parno_kontrak,:parkd_material_stok,:parqty,'+
                    ' :parharga,:parsatuan,:partotal_harga,:partotalpo,:parsisaqty,:parstatus,'+
                    ' :parppn,:parppn_rp,:parSpesifikasi,:parsubtotal_rp,:pargrandtotal)';
                    ParamByName('parno_kontrak').Value:=EdNo_kontrak.Text;
                    ParamByName('parkd_material_stok').Value:=MemMaterial['kd_material'];
                    ParamByName('parqty').Value:=MemMaterial['qty'];
                    ParamByName('parharga').Value:=MemMaterial['harga'];
                    ParamByName('parsatuan').Value:=MemMaterial['satuan'];
                    ParamByName('partotal_harga').Value:=MemMaterial['total_harga'];
                    ParamByName('partotalpo').Value:='0';
                    ParamByName('parsisaqty').Value:=MemMaterial['sisaqty'];
                    ParamByName('parstatus').Value:='CREATED';
                    ParamByName('parppn').Value:=MemMaterial['ppn'];
                    ParamByName('parppn_rp').Value:=MemMaterial['ppn_rp'];
                 //   ParamByName('pargrandtotal').Value:=MemMaterial['grandtotal'];
                    ParamByName('parSpesifikasi').Value:=MemMaterial['Spesifikasi'];
                    ParamByName('pargrandtotal').Value:=MemMaterial['grandtotal'];
                    ParamByName('parsubtotal_rp').Value:=MemMaterial['subtotal_rp'];
          ExecSQL;
        end;
          MemMaterial.Next;
      end;
      Dm.Koneksi.Commit;
      Messagedlg('Data Berhasil di Simpan',MtInformation,[Mbok],0);
      BBatalClick(sender);
    end
    Except
    on E :Exception do
    begin
      MessageDlg(E.Message,mtError,[MBok],0);
      dm.koneksi.Rollback;
    end;
    end;
end;

procedure TFNewKontrak_ks.BSimpanClick(Sender: TObject);
begin
      MemMaterial.First;
      while not MemMaterial.Eof do
      begin
        if DBGridEh2.Fields[0].AsString='' then
        begin
          MemMaterial.Delete;
        end;
        MemMaterial.Next;
      end;
      if EdNm_supp.Text='' then
      begin
        MessageDlg('Nama Supplier Tidak boleh Kosong ',MtWarning,[MbOk],0);
        EdNm_supp.SetFocus;
        Exit;
      end;
      if DtKontrak.Text='' then
      begin
        MessageDlg('Tanggal Mulai Kontrak Tidak boleh Kosong ',MtWarning,[MbOk],0);
        DtKontrak.SetFocus;
        Exit;
      end;
      if DtSelesai.Text='' then
      begin
        MessageDlg('Tanggal Selesai Kontrak Tidak boleh Kosong ',MtWarning,[MbOk],0);
        DtSelesai.SetFocus;
        Exit;
      end;
      if Edtempo.Text='' then
      begin
        MessageDlg('Jatuh Tempo Tidak boleh Kosong ',MtWarning,[MbOk],0);
        Edtempo.SetFocus;
        Exit;
      end;
      if DBGridEh2.Fields[6].AsString='' then
      begin
        MessageDlg('Quantum Tidak boleh Kosong ',MtWarning,[MbOk],0);
        Exit;
      end;
      if DBGridEh2.Fields[8].AsString='' then
      begin
        MessageDlg('Harga Tidak boleh Kosong ',MtWarning,[MbOk],0);
        Exit;
      end;
      if DBGridEh2.Fields[9].AsString='' then
      begin
        MessageDlg('Total Harga Tidak boleh Kosong ',MtWarning,[MbOk],0);
        Exit;
      end;
      if not dm.koneksi.InTransaction then
      dm.koneksi.StartTransaction;
      try
      begin
        Autonumber;
        with dm.Qtemp do
        begin
          close;
          sql.clear;
          sql.Text:='Select * from t_kontrak_kerjasama';
          ExecSQL;
        end;
        with dm.Qtemp do
        begin
          close;
          sql.clear;
          sql.Text:='insert into t_kontrak_kerjasama(no_kontrak,kd_supplier,tgl_kontrak,tgl_selesai,'+
                    ' jatuh_tempo, no_urut, tahun, keterangan, status,currency,nilaicurrency,'+
                    ' jenis,"Status_Approval",kategori,bln_kirim,th_kirim,pic,bulan)'+
                    ' values(:parno_kontrak,:parkd_supplier,:partgl_kontrak,:partgl_selesai, '+
                    ' :parjatuh_tempo,:parno_urut,:partahun,:parketerangan,:parstatus,:parcurrency,'+
                    ' :parnilaicurrency,:parjenis,:parStatus_Approval,:parkategori,:parbln_kirim,:parth_kirim,:parpic,:parbulan)';
                    ParamByName('parno_kontrak').Value:=EdNo_kontrak.Text;
                    ParamByName('parkd_supplier').Value:=EdKd_supp.Text;
                    ParamByName('partgl_kontrak').Value:=FormatDateTime('yyy-mm-dd',DtKontrak.Date);
                    ParamByName('partgl_selesai').Value:=FormatDateTime('yyy-mm-dd',DtSelesai.Date);
                    ParamByName('parjatuh_tempo').Value:=Edtempo.Text;
                    ParamByName('parno_urut').Value:=EdNo.Text;
                    ParamByName('partahun').Value:=DtTh.Text;
                    ParamByName('parketerangan').Value:=EdKet.Text;
                    ParamByName('parstatus').AsString:='1';
                    ParamByName('parcurrency').Value:=EdCurr.Text;
                    ParamByName('parnilaicurrency').Value:=EdnilaiCurr.Value;
                    ParamByName('parbln_kirim').Value:=CB_kirim.Text;
                    ParamByName('parth_kirim').Value:=EdTh_kirim.Value;
                    ParamByName('parjenis').Value:=CbJenis.Text;
                    ParamByName('parStatus_Approval').Value:=0;
                    ParamByName('parkategori').Value:=CbKategori.Text;
                    ParamByName('parpic').Value:=Nm;
                    ParamByName('parbulan').Value:=DtBln.Text;
          ExecSQL;
        end;
        MemMaterial.First;
        while not MemMaterial.Eof do
        begin
          with dm.Qtemp do
          begin
            close;
            sql.clear;
            sql.Text:='Select * from t_kontrak_kerjasama_det';
            ExecSQL;
          end;
          with dm.Qtemp do
          begin
            close;
            sql.clear;
            sql.Text:='insert into t_kontrak_kerjasama_det(no_kontrak,kd_material_stok,qty,harga,satuan,'+
                      ' total_harga, totalpo, sisaqty, status,ppn,ppn_rp,"Spesifikasi",'+
                      ' subtotal_rp,grandtotal,harga2)values(:parno_kontrak,'+
                      ' :parkd_material_stok,:parqty,:parharga,:parsatuan,:partotal_harga,:partotalpo,'+
                      ' :parsisaqty,:parstatus,:parppn,:parppn_rp,:parSpesifikasi,'+
                      ' :parsubtotal_rp,:pargrandtotal,:parharga2)';
                      ParamByName('parno_kontrak').Value:=EdNo_kontrak.Text;
                      ParamByName('parkd_material_stok').Value:=MemMaterial['kd_material'];
                      ParamByName('parqty').Value:=MemMaterial['qty'];
                      ParamByName('parharga').Value:=MemMaterial['harga'];
                      ParamByName('parsatuan').Value:=MemMaterial['satuan'];
                      ParamByName('partotal_harga').Value:=MemMaterial['total_harga'];
                      ParamByName('partotalpo').Value:='0';
                      ParamByName('parsisaqty').Value:=MemMaterial['sisaqty'];
                      ParamByName('parstatus').Value:='CREATED';
                      ParamByName('parppn').Value:=MemMaterial['ppn'];
                      ParamByName('parppn_rp').Value:=MemMaterial['ppn_rp'];
                     // ParamByName('pargrandtotal').Value:=MemMaterial['grandtotal'];
                      ParamByName('parSpesifikasi').Value:=MemMaterial['Spesifikasi'];
                      ParamByName('pargrandtotal').Value:=MemMaterial['grandtotal'];
                      ParamByName('parsubtotal_rp').Value:=MemMaterial['subtotal_rp'];
                      ParamByName('parharga2').Value:=MemMaterial['harga2'];
            ExecSQL;
          end;
          MemMaterial.Next;
        end;
        dm.koneksi.Commit;
        Messagedlg('Data Berhasil di Simpan',MtInformation,[Mbok],0);
        BBatalClick(sender);
        end
        Except
        on E :Exception do
        begin
          MessageDlg(E.Message,mtError,[MBok],0);
          dm.koneksi.Rollback;
        end;
      end;
end;

procedure TFNewKontrak_ks.DBGridEh2CellClick(Column: TColumnEh);
begin
    try
    begin
      if EdCurr.Text<>'Rp' then
      begin
        MemMaterial.Edit;
        MemMaterial['total_harga']:=MemMaterial['Qty']*MemMaterial['Harga'];
        MemMaterial['sisaqty']:=MemMaterial['qty'];
        //MemMaterial['subtotal_rp']:=MemMaterial['total_harga']*StrToFloat(EdnilaiCurr.Text);
        MemMaterial['totalpo']:=0;
        MemMaterial['ppn_rp']:=(MemMaterial['subtotal_rp']/100)*MemMaterial['ppn'];
        MemMaterial['harga2']:=(Trunc((MemMaterial['harga'])*EdnilaiCurr.Text)div 10)*10;
        MemMaterial['subtotal_rp']:=MemMaterial['harga2']*MemMaterial['Qty'];
        //MemMaterial['grandtotal']:=MemMaterial['total_harga'];//+MemMaterial['ppn_rp'];
        MemMaterial['grandtotal']:=MemMaterial['subtotal_rp']+MemMaterial['ppn_rp'];
        MemMaterial.Post;
      end
      else
      if EdCurr.Text='Rp' then
      begin
        MemMaterial.Edit;
        MemMaterial['total_harga']:=MemMaterial['Qty']*MemMaterial['Harga'];
        MemMaterial['sisaqty']:=MemMaterial['qty'];
        //MemMaterial['subtotal_rp']:=MemMaterial['total_harga']*StrToFloat(EdnilaiCurr.Text);
        MemMaterial['totalpo']:=0;
        MemMaterial['ppn_rp']:=(MemMaterial['subtotal_rp']/100)*MemMaterial['ppn'];
        MemMaterial['harga2']:=(Trunc((MemMaterial['harga'])*EdnilaiCurr.value)div 10)*10;
        MemMaterial['subtotal_rp']:=MemMaterial['harga']*MemMaterial['Qty'];
        //MemMaterial['grandtotal']:=MemMaterial['total_harga'];//+MemMaterial['ppn_rp'];
        MemMaterial['grandtotal']:=MemMaterial['subtotal_rp']+MemMaterial['ppn_rp'];
        MemMaterial.Post;
      end;
    end;
    except;
    end;
end;

procedure TFNewKontrak_ks.DBGridEh2ColEnter(Sender: TObject);
begin
    if EdCurr.Text<>'Rp' then
    begin
      MemMaterial.Edit;
      MemMaterial['total_harga']:=MemMaterial['Qty']*MemMaterial['Harga'];
      MemMaterial['sisaqty']:=MemMaterial['qty'];
      //MemMaterial['subtotal_rp']:=MemMaterial['total_harga']*StrToFloat(EdnilaiCurr.Text);
      MemMaterial['totalpo']:=0;
      MemMaterial['ppn_rp']:=(MemMaterial['subtotal_rp']/100)*MemMaterial['ppn'];
      MemMaterial['harga2']:=(Trunc((MemMaterial['harga'])*EdnilaiCurr.value)div 10)*10;
      MemMaterial['subtotal_rp']:=MemMaterial['harga2']*MemMaterial['Qty'];
      //MemMaterial['grandtotal']:=MemMaterial['total_harga'];//+MemMaterial['ppn_rp'];
      MemMaterial['grandtotal']:=MemMaterial['subtotal_rp']+MemMaterial['ppn_rp'];
      MemMaterial.Post;
    end
    else
    if EdCurr.Text='Rp' then
    begin
      MemMaterial.Edit;
      MemMaterial['total_harga']:=MemMaterial['Qty']*MemMaterial['Harga'];
      MemMaterial['sisaqty']:=MemMaterial['qty'];
      //MemMaterial['subtotal_rp']:=MemMaterial['total_harga']*StrToFloat(EdnilaiCurr.Text);
      MemMaterial['totalpo']:=0;
      MemMaterial['ppn_rp']:=(MemMaterial['subtotal_rp']/100)*MemMaterial['ppn'];
      MemMaterial['harga2']:=(Trunc((MemMaterial['harga'])*EdnilaiCurr.Value)div 10)*10;
      MemMaterial['subtotal_rp']:=MemMaterial['harga']*MemMaterial['Qty'];
      //MemMaterial['grandtotal']:=MemMaterial['total_harga'];//+MemMaterial['ppn_rp'];
      MemMaterial['grandtotal']:=MemMaterial['subtotal_rp']+MemMaterial['ppn_rp'];
      MemMaterial.Post;
    end;
end;

procedure TFNewKontrak_ks.DBGridEh2Columns0EditButtons0Click(Sender: TObject;
  var Handled: Boolean);
begin
    with Flistmaterialstok do
    begin
      Show;
      with QMaterial_stok do
      begin
        close;
        sql.Clear;
        sql.Text:='select a.kd_material,a.kd_supplier,a.kd_material_stok,a.no_urut,a.kd_urut,'+
                  ' a.qty,a.satuan,a.merk,a.nm_material,a.no_material,a.qtyperkonversi,'+
                  ' a.qtykonversi,a.satuankonversi,B.nm_supplier,A.nm_material,C.category, '+
                  ' D.konversi,c.jenis from t_material_stok A '+
                  ' inner join t_supplier B on A.kd_supplier=B.kd_supplier '+
                  ' inner join t_material C on A.kd_material=C.kd_material '+
                  ' left join t_konversi_material D on A.kd_material=D.kd_material '+
                  ' where B.kd_supplier='+QuotedStr(EdKd_supp.Text)+' and c.jenis='+QuotedStr(CbKategori.Text)+''+
                  ' Group by a.kd_material,a.kd_supplier,a.kd_material_stok,a.no_urut,'+
                  ' a.kd_urut,a.qty,a.satuan,a.merk,a.nm_material,a.no_material,a.qtyperkonversi,'+
                  ' a.qtykonversi,a.satuankonversi,B.nm_supplier,A.nm_material,C.category,d.konversi,c.jenis '+
                  ' order by kd_material_stok Desc';
        ExecSQL;
      end;
      QMaterial_stok.Open;
      if CbKategori.Text<>'PRODUKSI' then
      begin
         DBGridMaterial.IndicatorOptions:=[gioShowRowselCheckboxesEh];
      end
      else
         DBGridMaterial.IndicatorOptions:=[];
      if CbKategori.Text<>'PRODUKSI' then
      begin
         Panel1.Visible:=True;
      end
      else
         Panel1.Visible:=False;
    end;
end;

procedure TFNewKontrak_ks.DBGridEh2KeyPress(Sender: TObject; var Key: Char);
begin
    if Key =#27 then Close;
    Key := UpCase(Key);
end;

procedure TFNewKontrak_ks.DtKontrakChange(Sender: TObject);
begin
   DtBln.Date:=DtKontrak.Date;
   DtTh.Date:=DtKontrak.Date;
end;

procedure TFNewKontrak_ks.EdCurrSelect(Sender: TObject);
begin
      if EdCurr.Text='USD' then EdnilaiCurr.Visible:=True else EdnilaiCurr.Visible:=False;
        //if EdCurr.Text<>'USD' then EdnilaiCurr.Text:='1' else EdnilaiCurr.Text:='1';
      if EdCurr.Text<>'USD' then DBGridEh2.Columns[10].Visible:=False else DBGridEh2.Columns[10].Visible:=True;
      if EdCurr.Text='Rp' then
      begin
        DBGridEh2.Columns[8].Title.caption:='Harga Satuan';
        DBGridEh2.Columns[9].Visible:=False;
      end;
      if EdCurr.Text='USD' then
      begin
        DBGridEh2.Columns[9].Visible:=True;
      end;
      {if EdCurr.Text='USD' then
      begin
        DBGridEh2.Columns[11].Visible:=True;
        DBGridEh2.Columns[12].Visible:=True;
      end;
      if EdCurr.Text<>'USD' then
      begin
        DBGridEh2.Columns[11].Visible:=False;
        DBGridEh2.Columns[12].Visible:=False;
      end; }
end;

procedure TFNewKontrak_ks.EdnilaiCurrKeyPress(Sender: TObject; var Key: Char);
begin
    if not (key in['0'..'9',#8,#13,#32]) then
    begin
      Key:=#0;
      ShowMessage('Inputan hanya angka saja');
    end;
    end;

procedure TFNewKontrak_ks.EdNm_suppButtonClick(Sender: TObject);
begin
    with FSearch_Supplier_SPB do
    begin
      Show;
      QSupplier.Close;
      QSupplier.Open;
    end;
end;

end.
