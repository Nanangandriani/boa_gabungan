unit UNew_Barang;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, RzButton, Vcl.ExtCtrls, Vcl.StdCtrls,
  RzCmboBx, Data.DB, MemDS, DBAccess, Uni, RzBtnEdt, Vcl.Mask, RzEdit,
  Vcl.Buttons;

type
  TFNew_Barang = class(TForm)
    EdNm: TEdit;
    EdKd: TEdit;
    Edno1: TEdit;
    Edno: TEdit;
    EdCategory: TRzComboBox;
    Label8: TLabel;
    Label3: TLabel;
    Label6: TLabel;
    Label4: TLabel;
    Label2: TLabel;
    Label5: TLabel;
    Label1: TLabel;
    Label7: TLabel;
    Panel1: TPanel;
    BBatal: TRzBitBtn;
    BSimpan: TRzBitBtn;
    BEdit: TRzBitBtn;
    Label9: TLabel;
    EdSatuan: TEdit;
    Label10: TLabel;
    Label11: TLabel;
    Label12: TLabel;
    EdMerk: TRzComboBox;
    UniQuery1: TUniQuery;
    Label13: TLabel;
    Label14: TLabel;
    Edjenis: TRzComboBox;
    Label19: TLabel;
    Edkd_akun: TRzEdit;
    Label20: TLabel;
    EdNm_akun: TRzButtonEdit;
    SpeedButton1: TSpeedButton;
    Cbkdtr: TComboBox;
    SpeedButton2: TSpeedButton;
    procedure BBatalClick(Sender: TObject);
    procedure BSimpanClick(Sender: TObject);
    procedure BEditClick(Sender: TObject);
    procedure EdCategorySelect(Sender: TObject);
    procedure EdjenisSelect(Sender: TObject);
    procedure EdNm_akunButtonClick(Sender: TObject);
    procedure SpeedButton1Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure SpeedButton2Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    Procedure Load;
  end;

Function FNew_Barang: TFNew_Barang;
var  idmaterial:string;

implementation

{$R *.dfm}

uses  umainmenu, UDataModule, UAkun_Perkiraan_TerimaMat, UKategori_Barang,
  UListBarang, UNew_KategoriBarang, UItem_Type, UNew_ItemType;

var RealFNew_barang: TFNew_barang;
function FNew_Barang: TFNew_Barang;
begin
  if RealFNew_barang <> nil then FNew_barang:= RealFNew_barang
  else  Application.CreateForm(TFNew_Barang, Result);
end;

Procedure TFNew_Barang.Load;
begin
  Edjenis.Clear;
  with dm.Qtemp do
  begin
    close;
    sql.Clear;
    sql.Text:='select type from master_data.t_item_type where deleted_at isnull';
    ExecSQL;
  end;
  Dm.Qtemp.First;
  while not Dm.Qtemp.Eof do
  begin
    Edjenis.Items.Add(Dm.Qtemp['type']);
    Dm.Qtemp.Next;
  end;
end;

procedure TFNew_Barang.SpeedButton1Click(Sender: TObject);
begin
  FNew_KategoriBarang.Show;
  FNew_KategoriBarang.statustr:=3;
end;

procedure TFNew_Barang.SpeedButton2Click(Sender: TObject);
begin
  FNew_ItemType.Show;
  FNew_ItemType.statustr:=3;
end;

procedure TFNew_Barang.BBatalClick(Sender: TObject);
begin
  FlistBarang.Show;
  FlistBarang.ActRoExecute(sender);
  Close;
end;

procedure TFNew_Barang.BEditClick(Sender: TObject);
begin
if Edjenis.Text='' then
begin
  MessageDlg('jenis Tidak boleh Kosong ',MtWarning,[MbOk],0);
  Edjenis.SetFocus;
  Exit;
end;
if EdCategory.Text='' then
begin
  MessageDlg('Category Tidak boleh Kosong ',MtWarning,[MbOk],0);
  EdCategory.SetFocus;
  Exit;
end;
if EdKd.Text='' then
begin
  MessageDlg('Kode Material Tidak boleh Kosong ',MtWarning,[MbOk],0);
  EdKd.SetFocus;
  Exit;
end;
if EdNm.Text='' then
begin
  MessageDlg('Nama Material Tidak boleh Kosong ',MtWarning,[MbOk],0);
  EdNm.SetFocus;
  Exit;
end;
if EdSatuan.Text='' then
begin
  MessageDlg('Satuan Tidak boleh Kosong ',MtWarning,[MbOk],0);
  EdSatuan.SetFocus;
  Exit;
end;
 with dm.Qtemp do
begin
  close;
  sql.clear;
  sql.Text:='Select * from t_material';
  ExecSQL;
end;
if not dm.koneksi.InTransaction then
dm.koneksi.StartTransaction;
try
begin
 with dm.Qtemp do
begin
  close;
  sql.clear;
  sql.Text:=' Update t_material set no_urut=:parno_urut,kd_material=:parkd_material,nm_material=:parnm_material,'+
  ' satuan=:parsatuan,merk=:parmerk,jenis=:parjenis,kd_akun=:parkd_akun,no_material=:parno_material,category=:parcategory, '+
  ' picupdate=:parpic2,dateupdate=:pardateup where id=:parid';
            ParamByName('parno_urut').Value:=Edno1.Text;
            ParamByName('parkd_material').Value:=EdKd.Text;
            ParamByName('parnm_material').Value:=EdNm.Text;
            ParamByName('parsatuan').Value:=EdSatuan.Text;
            ParamByName('parmerk').Value:=EdMerk.Text;
            ParamByName('parjenis').Value:=Edjenis.Text;
            ParamByName('parkd_akun').Value:=Edkd_akun.Text;
            ParamByName('parno_material').Value:=Edno.Text;
            ParamByName('parcategory').Value:=EdCategory.Text;
            ParamByName('parid').Value:=idmaterial;
          //  ParamByName('parpic').Value:=nm;
            ParamByName('parpic2').Value:=nm;
            ParamByName('pardateup').asdate:=now;
  ExecSQL;
  end;
dm.koneksi.Commit;
Messagedlg('Data Berhasil di Simpan',MtInformation,[Mbok],0);
  BBatalClick(sender);
end
Except
on E :Exception do
begin
MessageDlg(E.Message,mtError,[MBok],0);
dm.koneksi.Rollback;
end;
end;
end;

procedure TFNew_Barang.BSimpanClick(Sender: TObject);
begin
if Edjenis.Text='' then
begin
  MessageDlg('jenis Tidak boleh Kosong ',MtWarning,[MbOk],0);
  Edjenis.SetFocus;
  Exit;
end;
if EdCategory.Text='' then
begin
  MessageDlg('Category Tidak boleh Kosong ',MtWarning,[MbOk],0);
  EdCategory.SetFocus;
  Exit;
end;
if EdKd.Text='' then
begin
  MessageDlg('Kode Material Tidak boleh Kosong ',MtWarning,[MbOk],0);
  EdKd.SetFocus;
  Exit;
end;
if EdNm.Text='' then
begin
  MessageDlg('Nama Material Tidak boleh Kosong ',MtWarning,[MbOk],0);
  EdNm.SetFocus;
  Exit;
end;
if EdSatuan.Text='' then
begin
  MessageDlg('Satuan Tidak boleh Kosong ',MtWarning,[MbOk],0);
  EdSatuan.SetFocus;
  Exit;
end;
 with dm.Qtemp do
begin
  close;
  sql.clear;
  sql.Text:='Select * from t_material';
  ExecSQL;
end;
if not dm.koneksi.InTransaction then
dm.koneksi.StartTransaction;
try
begin
 with dm.Qtemp do
begin
  close;
  sql.clear;
  sql.Text:='insert into t_material(no_urut,no_material,kd_material,nm_material,category,satuan,merk,jenis,'+
  ' kd_akun,status_koreksi,pic)values(:parno_urut,:parno_material,:parkd_material,:parnm_material,:parcategory,'+
  ' :parsatuan,:parmerk,:parjenis,:parkd_akun,:parsk,:parpic)';
            ParamByName('parno_urut').Value:=Edno1.Text;
            ParamByName('parno_material').Value:=Edno.Text;
            ParamByName('parkd_material').Value:=EdKd.Text;
            ParamByName('parnm_material').Value:=EdNm.Text;
            ParamByName('parcategory').Value:=EdCategory.Text;
            ParamByName('parsatuan').Value:=EdSatuan.Text;
            ParamByName('parmerk').Value:=EdMerk.Text;
            ParamByName('parjenis').Value:=EdJenis.Text;
            ParamByName('parkd_akun').Value:=edkd_akun.text;
            ParamByName('parsk').Value:='0';
            ParamByName('parpic').Value:=Nm;
  ExecSQL;
  end;
  dm.koneksi.Commit;
  Messagedlg('Data Berhasil di Simpan',MtInformation,[Mbok],0);
  BBatalClick(sender);
end
Except
on E :Exception do
begin
MessageDlg(E.Message,mtError,[MBok],0);
dm.koneksi.Rollback;
end;
end;
end;

procedure TFNew_Barang.EdCategorySelect(Sender: TObject);
var no_urut:string;
begin
with dm.Qtemp do
begin
  close;
  sql.Clear;
  sql.Text:='Select * from master_data.t_item_category where category='+QuotedStr(EdCategory.Text);
  ExecSQL;
end;
  Cbkdtr.Text:=DM.Qtemp['kdtr'];
if Cbkdtr.Text='1' then
begin
with dm.Qtemp3 do
begin
  Close;
  SQL.clear;
  sql.Text:=' SELECT * FROM master_data.t_item_category '+
            ' WHERE category='+QuotedStr(EdCategory.Text);
  Open;
end;
if DM.QTemp3['no_urut']='' then
begin
   ShowMessage('Kode Barang Kosong');
   EdKd.Text:='';
   Edno.Text:='';
   Edno1.Text:='';
end else
if DM.QTemp3['no_urut']<>'' then
begin
with dm.Qtemp do
begin
  Close;
  SQL.clear;
  sql.Text:=' SELECT * FROM t_material '+
            ' WHERE t_material.category='+QuotedStr(EdCategory.Text);
  Open;
end;
if dm.Qtemp.RecordCount =0 then
begin
  with dm.Qtemp2 do
  begin
    Close;
    SQL.clear;
    sql.Text:=' SELECT *,"left"(no_URUT,3)as kode FROM t_category_material '+
              ' WHERE category='+QuotedStr(EdCategory.Text);
    Open;
  end;
  //Urut:=DM.QTemp2['no_urut'];
  no_urut:=DM.QTemp2['no_urut'];
end else
if dm.Qtemp.RecordCount >0 then
begin
//if EdCategory.Text='PROMOSI' then
//BEGIN
  with dm.Qtemp2 do
  begin
    Close;
    SQL.clear;
    sql.Text:=' SELECT *,"left"(no_URUT,3)as kode FROM t_category_material '+
              ' WHERE category='+QuotedStr(EdCategory.Text);
    Open;
  end;
with dm.Qtemp do
begin
  Close;
  SQL.clear;
  sql.Text:=' SELECT "max"("right"(no_material,3))AS urut FROM t_material '+
            ' WHERE category='+QuotedStr(EdCategory.Text);
  Open;
end;
// urut:= Dm.Qtemp.FieldByName('urut').AsInteger +1;
   no_urut:=FloatToStr(Dm.Qtemp.FieldByName('urut').AsInteger +1);
end;
  Edno1.Text:=no_urut;
  edno.text:=Copy('000'+edno1.Text,length('000'+edno1.Text)-2,3);
///  if EdCategory.Text='PROMOSI' then
//  begin
//   EdKd.text:=DM.QTemp2['kode']+edno.Text;
 // end else
  EdKd.text:=Copy('000'+edno1.Text,length('000'+edno1.Text)-2,3);
  //Edno.Text:=no_urut;
  if EdCategory.Text='BAHAN KEMASAN' then EdMerk.Enabled:=True else EdMerk.Enabled:=False;
end;
end;
if Cbkdtr.Text='2' then
begin
  with dm.Qtemp3 do
  begin
    Close;
    SQL.clear;
    sql.Text:=' SELECT * FROM t_category_material '+
              ' WHERE t_category_material.category='+QuotedStr(EdCategory.Text);
    Open;
  end;
  if DM.QTemp3['no_urut']='' then
  begin
     ShowMessage('Kode Barang Kosong');
     EdKd.Text:='';
     Edno.Text:='';
     Edno1.Text:='';
  end else
  if DM.QTemp3['no_urut']<>'' then
  begin
  with dm.Qtemp do
  begin
    Close;
    SQL.clear;
    sql.Text:=' SELECT * FROM t_material '+
              ' WHERE t_material.category='+QuotedStr(EdCategory.Text);
    Open;
  end;
      if dm.Qtemp.RecordCount =0 then
      begin
        with dm.Qtemp2 do
        begin
          Close;
          SQL.clear;
          sql.Text:=' SELECT *,"right"(no_urut,3)as urut, left(no_urut,4)as kd FROM t_category_material '+
                    ' WHERE category='+QuotedStr(EdCategory.Text);
          Open;
        end;
        //Urut:=DM.QTemp2['no_urut'];
        no_urut:=DM.QTemp2['urut'];
        EdKd.Text:=DM.QTemp2['no_urut'];
      end else
      if dm.Qtemp.RecordCount >0 then
      begin
      //if EdCategory.Text='PROMOSI' then
      //BEGIN
        with dm.Qtemp2 do
        begin
          Close;
          SQL.clear;
          sql.Text:=' SELECT *,"right"(no_URUT,3)as kode, left(no_urut,4)as kd FROM t_category_material '+
                    ' WHERE category='+QuotedStr(EdCategory.Text);
          Open;
        end;
      with dm.Qtemp do
      begin
        Close;
        SQL.clear;
        sql.Text:=' SELECT "max"("right"(no_material,3))AS urut FROM t_material '+
                  ' WHERE category='+QuotedStr(EdCategory.Text);
        Open;
      end;
         no_urut:=FloatToStr(Dm.Qtemp.FieldByName('urut').AsInteger +1);
      end;
        Edno1.Text:=no_urut;
        edno.text:=Copy('000'+edno1.Text,length('000'+edno1.Text)-2,3);
      ///  if EdCategory.Text='PROMOSI' then
      //  begin
      //   EdKd.text:=DM.QTemp2['kode']+edno.Text;
       // end else
      EdKd.text:=dm.QTemp2['kd']+Copy('000'+edno1.Text,length('000'+edno1.Text)-2,3);
  end;
end;
end;

procedure TFNew_Barang.EdjenisSelect(Sender: TObject);
begin
EdCategory.Clear;
{case edjenis.ItemIndex of
0:begin
  EdCategory.Items.Add('Bahan Baku');
  EdCategory.Items.Add('Bahan Kemasan');
  EdCategory.Items.Add('Kimia');
end;
1:begin
  EdCategory.Items.Add('Bahan Penolong');
  EdCategory.Items.Add('Jasa');
end;
end;  }
  with dm.Qtemp do
  begin
    close;
    sql.Clear;
    sql.Text:='select a.* from master_data.t_item_category a inner join master_data.t_item_type b on a.id_type=b."id" where b.type='+QuotedStr(Edjenis.Text)+'order by category asc';
    ExecSQL;
  end;
  Dm.Qtemp.First;
  while not Dm.Qtemp.Eof do
  begin
    EdCategory.Items.Add(Dm.Qtemp['category']);
    Dm.Qtemp.Next;
  end;
end;

procedure TFNew_Barang.EdNm_akunButtonClick(Sender: TObject);
begin
{with  FAkun_Perkiraan_TerimaMat do
begin
  Show;
  statustr:='material';
 // edit1.Text:='material';
  if QAkun.Active=false then QAkun.Active:=True;
end; }
end;

procedure TFNew_Barang.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Action:=cafree;
end;

procedure TFNew_Barang.FormCreate(Sender: TObject);
begin
  RealFNew_barang:=self;
end;

procedure TFNew_Barang.FormDestroy(Sender: TObject);
begin
  RealFNew_barang:=nil;
end;

procedure TFNew_Barang.FormShow(Sender: TObject);
begin
  Load;
end;

end.
