unit UMainMenu;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.Tabs, Vcl.ComCtrls,
  Vcl.Menus, Vcl.ToolWin, Vcl.WinXCalendars, System.Actions, Vcl.ActnList,
  Vcl.WinXCtrls, Vcl.StdCtrls, RzPanel, RzButton, RzStatus, RzDBStat,
  System.ImageList, Vcl.ImgList, Vcl.Imaging.pngimage, RzTabs, Vcl.OleCtrls,
  SHDocVw, Winapi.WebView2, Winapi.ActiveX, Vcl.Edge,MSHTML, ShellAPI, frxClass,
  Vcl.Buttons, RzSplit, RzTreeVw;

type
  TFMainMenu = class(TForm)
    PenelHeader: TRzPanel;
    RzStatusBar1: TRzStatusBar;
    RzDBStateStatus1: TRzDBStateStatus;
    RzVersionInfoStatus1: TRzVersionInfoStatus;
    RzProgressStatus1: TRzProgressStatus;
    RzClockStatus1: TRzClockStatus;
    RzGlyphStatus1: TRzGlyphStatus;
    CategoryPanelUtama: TCategoryPanelGroup;
    ImageList1: TImageList;
    pnPengaturan: TRzPanel;
    ImgPengaturan: TImage;
    LabPengaturan: TLabel;
    pnUtility: TRzPanel;
    ImgUtility: TImage;
    LabUtility: TLabel;
    pnApproval: TRzPanel;
    ImgApproval: TImage;
    LabApproval: TLabel;
    pnLaporan: TRzPanel;
    ImgLaporan: TImage;
    LabLaporan: TLabel;
    pnTransaksi: TRzPanel;
    ImgTransaksi: TImage;
    LabTransaksi: TLabel;
    pnDataMaster: TRzPanel;
    ImgDataMaster: TImage;
    LabDataMaster: TLabel;
    pnFile: TRzPanel;
    ImgFile: TImage;
    LabFile: TLabel;
    pnUser: TRzPanel;
    ImgUser: TImage;
    LabNamaUser: TLabel;
    LabBagianUser: TLabel;
    LabNamaPTUser: TLabel;
    PageControl1: TRzPageControl;
    TabForm: TRzTabSheet;
    PanelParent: TPanel;
    EdgeBrowser1: TEdgeBrowser;
    WebBrowser1: TWebBrowser;
    frxReport1: TfrxReport;
    RzSplitter1: TRzSplitter;
    TreeView1: TRzTreeView;
    procedure Exit1Click(Sender: TObject);
    procedure RefreshMenu1Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
    procedure ImgFileClick(Sender: TObject);
    procedure ImgPengaturanClick(Sender: TObject);
    procedure ImgDataMasterClick(Sender: TObject);
    procedure ImgTransaksiClick(Sender: TObject);
    procedure ImgLaporanClick(Sender: TObject);
    procedure ImgApprovalClick(Sender: TObject);
    procedure ImgUtilityClick(Sender: TObject);
    procedure PageControl1Close(Sender: TObject; var AllowClose: Boolean);
    procedure BitBtn1Click(Sender: TObject);

  private
    { Private declarations }
    Procedure ShowForm;
    Procedure TampilTabForm;
    Procedure AksesSub(Form: TForm; Akses,Sub:String);

  public
    { Public declarations }
    Procedure CreateMenu(Role:String);
    Procedure CreateSubMenu(Role,Menu:String);
    Procedure CloseTabs(Sender: TObject);
    Procedure ClearCategoryPanelGroup;
       Procedure Cleartreview;
    Procedure GetSubMenu(Sender: TObject);
    Procedure btnApplyClick(Sender: TObject);
    Procedure CallFoo(S: string; I: Integer);

    procedure Getsubmenutree(Sender: TObject);

  end;

var
  FMainMenu: TFMainMenu;
  AClass: TPersistentClass;
  AFormClass: TFormClass;
  AForm: TForm;
  ANewTabs: TRzTabSheet;
  ApnTabs: TRzPanel;
  ACategoryPanel: TCategoryPanel;
  //AButtonPanel: TButton;
  //CloseButton: TButton;
  AButtonPanel: TRzButton;
  CloseButton: TRzButton;
  FormAktif,I:Integer;
  HakAkses : String;
  vCaptionButton, vNamaButton :string;
  MyTreeView : TRzTreeView;

  Doc: IHTMLDocument2;      // current HTML document
  HTMLWindow: IHTMLWindow2; // parent window of current HTML document
  JSFn: string;
implementation

{$R *.dfm}

uses UDataModule, UDashboard, UFakturPajak, UPenomoran, UListBarang,
  UListPelanggan, UListSupplier, UListProduk, UListKonversi_Material,
  UListKonversi_Produk, UList_Gudang, UListBank_perusahaan;


function ExecuteScript(doc: IHTMLDocument2; script: string; language: string): Boolean;
var
  win: IHTMLWindow2;
  Olelanguage: Olevariant;
begin
  if doc <> nil then
  begin
    try
      win := doc.parentWindow;
      if win <> nil then
      begin
        try
          Olelanguage := language;
          win.ExecScript(script, Olelanguage);
        finally
          win := nil;
        end;
      end;
    finally
      doc := nil;
    end;
  end;
end;

function GetElementIdValue(WebBrowser: TWebBrowser;
  TagName, TagId, TagAttrib: string):string;
var
  Document: IHTMLDocument2;
  Body: IHTMLElement2;
  Tags: IHTMLElementCollection;
  Tag: IHTMLElement;
  I: Integer;
begin
   Result:='';
   if not Supports(WebBrowser.Document, IHTMLDocument2, Document) then
    raise Exception.Create('Invalid HTML document');
   if not Supports(Document.body, IHTMLElement2, Body) then
     raise Exception.Create('Can''t find <body> element');
   Tags := Body.getElementsByTagName(UpperCase(TagName));
   for I := 0 to Pred(Tags.length) do begin
     Tag:=Tags.item(I, EmptyParam) as IHTMLElement;
     if Tag.id=TagId then Result := Tag.getAttribute(TagAttrib, 0);
   end;
end;

procedure TFMainMenu.CallFoo(S: string; I: Integer);
   { Calls JavaScript foo() function }
var
  Doc: IHTMLDocument2;      // current HTML document
  HTMLWindow: IHTMLWindow2; // parent window of current HTML document
  JSFn: string;
  result:integer;             // stores JavaScipt function call
begin
  //Result:='';
  // Get reference to current document
   Doc := WebBrowser1.Document as IHTMLDocument2;
   if not Assigned(Doc) then
     Exit;
   // Get parent window of current document
   HTMLWindow := Doc.parentWindow;
   if not Assigned(HTMLWindow) then
     Exit;
   // Run JavaScript
   try
     JSFn := Format('foo("%s",%d)', [S, I]);  // build function call
     HTMLWindow.execScript(JSFn, 'JavaScript'); // execute function
     // get result
     //Result := GetElementIdValue(WebBrowser1, 'input', 'result', 'value')
   except
     // handle exception in case JavaScript fails to run
   end;
end;

procedure TFMainMenu.CloseTabs;
var
  RzTabSheet: TRzTabSheet;
begin
  {if Sender is TButton then
  begin
    RzTabSheet := TRzTabSheet(TButton(Sender).Parent);
    if RzTabSheet.PageControl <> nil then
      RzTabSheet.PageControl.CloseActiveTab(); 
      RzTabSheet.TabVisible := true;
  end;} 

  //CloseTabs(TabForm); 
  
end;

procedure TFMainMenu.ClearCategoryPanelGroup;
var
  i: Integer;
begin
  for i := CategoryPanelUtama.ControlCount - 1 downto 0 do
  begin
    if CategoryPanelUtama.Controls[i] is TCategoryPanel then
      CategoryPanelUtama.Controls[i].Free;
  end;
end;

procedure TFMainMenu.Cleartreview;
  var
  SelNode: TTreeNode;
begin
  if TreeView1.Selected <> nil then
  begin
    SelNode := TreeView1.Selected;

    TreeView1.Selected.Delete;
    TreeView1.SetFocus;

  end;
end;

procedure TFMainMenu.GetSubMenu(Sender: TObject);
begin
  CreateSubMenu('admin',TButton(Sender).Caption);
  TabForm.Caption:=TButton(Sender).Caption;
end;

procedure TFMainMenu.Getsubmenutree(Sender: TObject);
begin

end;

procedure TFMainMenu.ImgApprovalClick(Sender: TObject);
begin
  CreateSubMenu('admin',LabApproval.Caption);
  //TabForm.Caption:=LabApproval.Caption;
end;

procedure TFMainMenu.ImgDataMasterClick(Sender: TObject);
begin
  CreateSubMenu('admin',LabDataMaster.Caption);
  //TabForm.Caption:=LabDataMaster.Caption;
end;

procedure TFMainMenu.ImgFileClick(Sender: TObject);
begin
  CreateSubMenu('admin',LabFile.Caption);
  //TabForm.Caption:=LabFile.Caption;
end;

procedure TFMainMenu.ImgLaporanClick(Sender: TObject);
begin
  CreateSubMenu('admin',LabLaporan.Caption);
  //TabForm.Caption:=LabLaporan.Caption;
end;

procedure TFMainMenu.ImgPengaturanClick(Sender: TObject);
begin
  CreateSubMenu('admin',LabPengaturan.Caption);
  //TabForm.Caption:=LabPengaturan.Caption;
end;

procedure TFMainMenu.ImgTransaksiClick(Sender: TObject);
begin
  CreateSubMenu('admin',LabTransaksi.Caption);
  //TabForm.Caption:=LabTransaksi.Caption;
end;

procedure TFMainMenu.ImgUtilityClick(Sender: TObject);
begin
  CreateSubMenu('admin',LabUtility.Caption);
  //TabForm.Caption:=LabUtility.Caption;
end;

procedure TFMainMenu.PageControl1Close(Sender: TObject;
  var AllowClose: Boolean);
begin  
   //showmessage('Test'); 
    if PageControl1.TabIndex<>0 then
    begin
      //showmessage(TRzTabSheet(Sender).Name); 
      CloseTabs(TRzTabSheet(Sender));   
      TRzTabSheet(Sender).TabVisible:=false;
      //ANewTabs.Free;
    end;
end;

procedure TFMainMenu.BitBtn1Click(Sender: TObject);
begin
  frxReport1.ShowReport()
end;

procedure TFMainMenu.btnApplyClick(Sender: TObject);
begin
  TRzTabSheet(Sender).Caption:=TButton(Sender).Caption;
  vCaptionButton:=TButton(Sender).Caption;
  vNamaButton:=TButton(Sender).Name;
  TampilTabForm;
end;

procedure TFMainMenu.TampilTabForm;
begin
   with dm.Qtemp do
   begin
    SQL.Clear;
    SQL.Text := 'select * from penjualan.t_submenu where SubMenu=' +
                QuotedStr(vCaptionButton);
    open;
   end;

    if dm.Qtemp.RecordCount<>1 then
    begin
    ShowMessage('Data Menu Tidak Di Temukan Silakan Hubungi IT');
    exit;
    end;

    if dm.Qtemp.RecordCount=1 then
    begin              
       //create new Tabsheet
        ANewTabs := TRzTabSheet.Create(nil);
        ANewTabs.Name := 'Tab'+vNamaButton;
        ANewTabs.Caption := vCaptionButton;
        ANewTabs.PageControl := PageControl1; 
        PageControl1.ActivePage := ANewTabs;

        {//Create Close Tab  
        CloseButton := TButton.Create(ANewTabs);
        CloseButton.Parent := ANewTabs;
        CloseButton.Caption := 'X';
        CloseButton.Left := ANewTabs.Width - CloseButton.Width - 5;
        CloseButton.Top := 5;
        CloseButton.OnClick := CloseTabs; }

        //Create Panel Dalam Tab
        ApnTabs := TRzPanel.Create(nil);
        ApnTabs.Name := 'Panel'+vNamaButton;
        ApnTabs.Caption := vCaptionButton;
        ApnTabs.Parent := ANewTabs;
        ApnTabs.Align:= alClient;

        //Create Form Dalam Panel
        AClass := FindClass('T'+dm.Qtemp.fieldbyname('link').AsString);
        AFormClass := TFormClass(AClass);
        AForm := AFormClass.Create(Application.MainForm);
        AForm.Parent:=ApnTabs;
        AForm.Align:=Alclient;
        AForm.BorderStyle:=BsNone;
        AksesSub(AForm,HakAkses,vCaptionButton);
        AForm.Show;
    end;
end;


procedure TFMainMenu.ShowForm;
begin
end;

procedure TFMainMenu.CreateSubMenu(Role,Menu:String);
begin
   with dm.Qtemp1 do
   begin
       SQL.Clear;
       SQL.Text :=' SELECT DISTINCT cc.id, cc.menu FROM penjualan.t_akses aa  '+
                  ' INNER JOIN penjualan.t_submenu bb ON aa.submenu = bb.submenu '+
                  ' INNER JOIN penjualan.t_menu cc ON bb.kodemaster = cc.kodemaster '+
                  ' INNER JOIN penjualan.t_user dd ON dd.akses = aa.RoleNama  '+
                  ' WHERE dd.akses='+QuotedStr('Admin')+'  and cc.menu='+QuotedStr(Menu)+
                  ' Order by cc.id DESC ';
       open;
       First;
   end;
   //CategoryPanelUtama.RemoveComponent(TCustomCategoryPanel(CategoryPanelUtama.Panels[0]));
   TCategoryPanelGroup.Create(nil);
   CategoryPanelUtama.Create(nil);
   ClearCategoryPanelGroup;
   //CategoryPanelUtama.Parent := SplitView1;
   CategoryPanelUtama.Width:=250;

   TRzTreeView.Create(nil);
   Treeview1.Create(nil);
   Cleartreview;
   Treeview1.Width:=250;

   while not dm.Qtemp1.Eof do
   begin

    //Create Category Panel
      CategoryPanelUtama.HeaderFont.Style:=[fsBold];
      ACategoryPanel:=CategoryPanelUtama.CreatePanel(self) as TCategoryPanel;
      ACategoryPanel.Name:= StringReplace(dm.Qtemp1.fieldbyname('menu').AsString, ' ', '', [rfReplaceAll]);
      ACategoryPanel.Caption:= dm.Qtemp1.fieldbyname('menu').AsString;
      //ACategoryPanel.
      ACategoryPanel.Font.Size:=9;
      ACategoryPanel.Expand;
      ACategoryPanel.Height:=RzSplitter1.Height;
      ACategoryPanel.color:=clGradientInactiveCaption;
      //ACategoryPanel.StyleName:='windows';
      //ACategoryPanel.Width:=250;

      //TreeView1.Items.Add(nil,StringReplace(dm.Qtemp1.fieldbyname('menu').AsString, ' ', '', [rfReplaceAll]));

     with dm.Qtemp2 do
     begin
          SQL.Clear;
           SQL.Text :=' SELECT DISTINCT bb.id, cc.menu,bb.submenu FROM penjualan.t_akses aa  '+
                      ' INNER JOIN penjualan.t_submenu bb ON aa.submenu = bb.submenu   '+
                      ' INNER JOIN penjualan.t_menu cc ON bb.kodemaster = cc.kodemaster '+
                      ' INNER JOIN penjualan.t_user dd ON dd.akses = aa.RoleNama '+
                      ' WHERE dd.akses='+QuotedStr('Admin')+
                      ' and cc.menu='+QuotedStr(Menu)+
                      ' Order by bb.id  DESC ';
          open;
          First;
      end;
      while not dm.Qtemp2.Eof do
      begin
        //Create Button Dalam Category Panel
        //AButtonPanel:= TButton.Create(ACategoryPanel);
        AButtonPanel:= TRzButton.Create(ACategoryPanel);
        //AButtonPanel:= TButton.Create(ACategoryPanel);
        AButtonPanel.Name:= StringReplace(dm.Qtemp2.Fieldbyname('submenu').AsString, ' ', '', [rfReplaceAll]);
        AButtonPanel.Caption:= dm.Qtemp2.Fieldbyname('submenu').AsString;
        AButtonPanel.Parent := ACategoryPanel;
        AButtonPanel.Align := alTop;
        AButtonPanel.Width:=250;
        AButtonPanel.Alignment:=taLeftJustify;
        AButtonPanel.OnClick := btnApplyClick;
        //AButtonPanel.StyleName:='windows';
        AButtonPanel.Color:=clBlue;
        //clGradientInactiveCaption;
        //AButtonPanel.Tag:=1;

         TreeView1.Items.AddChild(TreeView1.Selected,StringReplace(dm.Qtemp2.Fieldbyname('submenu').AsString, ' ', '', [rfReplaceAll])) ;

         dm.Qtemp2.Next;
      end;
      dm.Qtemp1.Next;


    end;

end;


procedure TFMainMenu.CreateMenu(Role:String);
begin
 with dm.Qtemp1 do
   begin
       SQL.Clear;
       SQL.Text := 'SELECT DISTINCT cc.id, cc.menu FROM penjualan.t_akses aa '+
                   ' INNER JOIN penjualan.t_submenu bb ON aa.submenu = bb.submenu '+
                   ' INNER JOIN penjualan.t_menu cc ON bb.kodemaster = cc.kodemaster '+
                   ' INNER JOIN penjualan.t_user dd ON dd.akses = aa.RoleNama '+
                   ' WHERE dd.akses='+QuotedStr('Admin')+
                   ' Order by cc.id DESC';
      open;
      First;
   end;
   //CategoryPanelUtama.RemoveComponent(TCustomCategoryPanel(CategoryPanelUtama.Panels[0]));
   TCategoryPanelGroup.Create(nil);
   while not dm.Qtemp1.Eof do
   begin

    //Create Button Di Panel Header
        //AButtonPanel:= TButton.Create(PenelHeader);
        AButtonPanel:= TRzButton.Create(PenelHeader);
        //AButtonPanel:= TButton.Create(ACategoryPanel);
        AButtonPanel.Name:= StringReplace(dm.Qtemp1.fieldbyname('menu').AsString, ' ', '', [rfReplaceAll]);
        AButtonPanel.Caption:= dm.Qtemp1.fieldbyname('menu').AsString;
        AButtonPanel.Parent := PenelHeader;
        AButtonPanel.Align := alLeft;
        //AButtonPanel.Images:=ImageList1;
        //AButtonPanel.ImageIndex:=1;
        AButtonPanel.OnClick := GetSubMenu;
      dm.Qtemp1.Next;
    end;

end;

procedure TFMainMenu.AksesSub(Form: TForm; Akses, Sub: String);
begin
  with dm.Qtemp1 do
       begin
            SQL.Clear;
            SQL.Text := 'SELECT aa.* FROM penjualan.t_akses aa '+
                        ' INNER JOIN penjualan.t_submenu bb ON aa.SubMenu = bb.SubMenu '+
                        ' INNER JOIN penjualan.t_menu cc ON bb.kodemaster = cc.kodemaster '+
                        ' INNER JOIN penjualan.t_user dd ON dd.akses = aa.RoleNama '+
                        ' WHERE aa.RoleNama='+QuotedStr('Admin')+
                        ' AND aa.SubMenu='+QuotedStr('Pemakaian Produksi');
            open;
       end;
  if dm.Qtemp1.FieldByName('RAdd').AsInteger=2 then
  begin
       for i:=0 to Form.ComponentCount-1 do
       if (Form.Components[i] is TAction) then
       if TAction(Form.Components[i]).Name='ActNew' then
       TAction(Form.Components[i]).Enabled:=true;
  end;
  if dm.Qtemp1.FieldByName('REdit').AsInteger=2 then
  begin
       for i:=0 to Form.ComponentCount-1 do
       if (Form.Components[i] is TAction) then
       if TAction(Form.Components[i]).Name='ActEdit' then
       TAction(Form.Components[i]).Enabled:=true;
       {for i:=0 to Form.ComponentCount-1 do
       if (Form.Components[i] is TAction) then
       if TAction(Form.Components[i]).Name='ActSaveNew' then
       TAction(Form.Components[i]).Enabled:=true;}
  end;
  if dm.Qtemp1.FieldByName('RDelete').AsInteger=2 then
  begin
       for i:=0 to Form.ComponentCount-1 do
       if (Form.Components[i] is TAction) then
       if TAction(Form.Components[i]).Name='ActDelete' then
       TAction(Form.Components[i]).Enabled:=true;
  end;
  if dm.Qtemp1.FieldByName('RRefresh').AsInteger=2 then
  begin
       for i:=0 to Form.ComponentCount-1 do
       if (Form.Components[i] is TAction) then
       if TAction(Form.Components[i]).Name='ActRefresh' then
       TAction(Form.Components[i]).Enabled:=true;
  end;
  if dm.Qtemp1.FieldByName('RPrint').AsInteger=2 then
  begin
       for i:=0 to Form.ComponentCount-1 do
       if (Form.Components[i] is TAction) then
       if TAction(Form.Components[i]).Name='ActPrint' then
       TAction(Form.Components[i]).Enabled:=true;
  end;
end;

procedure TFMainMenu.Exit1Click(Sender: TObject);
begin
  Application.Terminate;
end;

procedure TFMainMenu.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Application.Terminate;
end;

procedure TFMainMenu.FormShow(Sender: TObject);
begin

  //CreateMenu('admin');
  // webbrowser1.Navigate('https://app.powerbi.com/view?r=eyJrIjoiN2NlNzIyNDgtNzY2Zi00ZjZkLTk0NDgtYjc4NjlmMzcxMmU2IiwidCI6ImFhZjhkYzU3LTBiMzEtNDViNS04ODY2LWNhYWQ5Yjc0YmY3NiIsImMiOjEwfQ%3D%3D');
  //Edgebrowser1.Navigate('https://app.powerbi.com/view?r=eyJrIjoiN2NlNzIyNDgtNzY2Zi00ZjZkLTk0NDgtYjc4NjlmMzcxMmU2IiwidCI6ImFhZjhkYzU3LTBiMzEtNDViNS04ODY2LWNhYWQ5Yjc0YmY3NiIsImMiOjEwfQ%3D%3D');
  //Edgebrowser1.Navigate('http://www.google.com');
end;

procedure TFMainMenu.RefreshMenu1Click(Sender: TObject);
begin
  ShowForm;
end;

Initialization
  RegisterClasses([TFDashboard,TFFakturPajak,TFPenomoran,TFlistBarang,TFListPelanggan,TFlistSupplier,TFListProduk,TFListKonvMaterial,TFListKonvProduk,TFListGudang,TFListBank]);
end.
